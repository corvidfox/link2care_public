---
title: "Import Link2Care Survey Data - QDS - Visit 1"
date: "2020-12-23 <br> Updated: `r Sys.Date()`"
format: pdf
editor: 
  markdown: 
    wrap: sentence
---

# ‚≠êÔ∏èOverview

This file is used to import the Link2Care follow-up visit survey data and do some initial data cleaning. It drops SPSS calculated variables, recreates these dropped variables, and creates a variable map.

### Change log

**2023-09-27**, the original .RMD version of this file was modified and updated for changing priorities. The new QMD version prioritizes human readability for tracing from QDS data to final data, facilitation of point-fixes, and creation of calculated variables from processing in R rather than SPSS.

On **2021-06-10**, VISIT_TYPE was added to QDS. This change affects V1-V5.

On **2021-06-05**, Joe Waring found a discrepancy between the way Tobacco 26 was being asked in QDS and REDCap. 

In QDS, T26_V1, T26_V3, T26_V4, and T26_V5 read:

Which option would give you the best chance for quitting smoking?
1	=	Medications
2	=	Counseling
3	=	Both medications and counseling
4	=	Smartphone app
5	=	Both smartphone app and medications
6	=	Quitting "cold turkey" - without counseling or medications
9	=	skipped

And only one answer choice was possible.

In REDCap, t26_v1 reads:

If you were to try to quit smoking, which of the following would you prefer to receive: (select all that apply)

1 t26_v1___1 Medications
2 t26_v1___2 Group Counseling
3 t26_v1___3 Smartphone app
4 t26_v1___4 In person individual counseling
5 t26_v1___5 Helpline phone counseling
6 t26_v1___6 None of the above

Where multiple answers are possible and t26_v1___1 - t26_v1___6 are dummy variables.

On 2021-06-30 the QDS survey was changed to be more like the REDCap survey. The QDS data now has T26A_V1, T26A_V1A, T26A_V1B, T26A_V1C, T26A_V1D, T26A_V1E, and T26A_V1F that correspond to t26_v1___1 - t26_v1___6 in REDCap.

Remember that because of a naming error with T3B_V1, T26_V1 was already manually changed to T27 in the QDS Word codebooks (e.g., L2C_V1 Codebook.docx) by MBC. Changing "T26_V1" (the name that appears in the outdated codebook) to "T26A_V1" (the name that actually appears in the data frame now).

This change affects V1, V3, V4, and V5.

[Notes on cleaning individual L2C data sets for merging](https://github.com/brad-cannell/link2care_public/wiki/Notes-on-cleaning-individual-L2C-data-sets-for-merging)

# üì¶Load packages

```{r message=FALSE}
library(dplyr, warn.conflicts = FALSE)
library(purrr, warn.conflicts = FALSE)
library(haven, warn.conflicts = FALSE)
library(here, warn.conflicts = FALSE)
library(tidyverse, warn.conflicts = FALSE)
```

```{r}
source("R/standardize_col_names.R")
```

# üì• Import data

-   Import all 5 QDS data frames.
-   These datasets were exported directly from QDS as SPSS files (.SAV), and they have already been run through an SPSS syntax file (`spss_syntax/Visit 1.sps`, `spss_syntax/Visit 2.sps`, etc.).
-   The data was exported from QDS by someone other than MBC.
-   The SPSS syntax files were created by someone other than MBC.

```{r}
qds_spss_path <- "data/qds/"
qds_spss_paths <- paste0(qds_spss_path, "Visit_", 1:5, "_Data.SAV")
```

Check the most recent file modification dates and print for user when this file is being sourced.

```{r}
walk(
  .x = c(1:5),
  .f = function(x) {
    sav_nm <- paste0("Visit_", x, "_Data.SAV")
    path <- paste0(qds_spss_path, sav_nm)
    cat(
      sav_nm, "last modified on OneDrive", as.character(file.info(path)$mtime), "\n"
    )
  }
)
```

Import the data

```{r}
walk(
  .x = c(1:5),
  .f = function(x) {
    new_nm <- paste0("v", x)
    sav_nm <- paste0("Visit_", x, "_Data.SAV")
    path <- paste0(qds_spss_path, sav_nm)
    assign(new_nm, read_sav(path), envir = .GlobalEnv)
  }
)

rm(qds_spss_path)
```

Print a message for when this file is being sourced

```{r}
walk(
  .x = c(1:5),
  .f = function(x) {
    df_nm <- paste0("v", x)
    df <- get(df_nm, envir = .GlobalEnv)
    # Print a message for when this file is being sourced
    cat(
      paste0(Sys.Date(), ":"),
      df_nm, "imported with", nrow(df), "rows and", ncol(df), "columns.\n"
    )
  }
)

# Data check:
# 2023-08-30: v1 imported with 442 rows and 810 columns.
# 2023-08-30: v2 imported with 406 rows and 213 columns.
# 2023-08-30: v3 imported with 273 rows and 542 columns.
# 2023-08-30: v4 imported with 207 rows and 598 columns.
# 2023-08-30: v5 imported with 178 rows and 649 columns.
```

# Clean column names

We have to make the column names match across visits so that we can merge all of the individual QDS data frames into one.

## Notes

1.  The columns in the data are not arranged in the order that they exist in the actual QDS survey for some reason. This makes the data harder to work with, and it will make the codebook we eventually create difficult to use. So, we are going to reorder them in the order that they appear in the Link2Care appendix (`codebooks/from_qds/Link2Care_Appendix.pdf`).

-   The Link2Care appendix is organized by section, then instrument. Ordering of the variables in the combined data should mirror this as closely and reasonably as possible.

-   With the "human readable" variables for section and instrument, we can add some of the codebook organization attribute values associated with each variables.

-   Some variables in the data do not belong to an instrument in the Link2Care appendix. For example, the questions about COVID vaccines. We will order them after the columns that do appear in the Link2Care appendix following the base logic of the Link2Care appendix.

2.  Each data set has different names for the same variables, including unique typos.

-   By creating a map that translates the variable name in each data set to a single variable, we can batch the renaming, make additional point-fixes that may arise from later changes without re-doing larger chunks of code, and rename variables as needed with a single change in the map.

-   We can similarly insert new variables into this map, and otherwise adjust ordering as needed.

3.  We want to re-create variables that were calculated in SPSS, rather than relying on their imported values.

-   The map organization system allows us to insert variables to ensure a human-readable ordering.

## Initiating Variable Map

We initiated a tibble that would contain our initial standardized variables, the name and order of each section and instrument each variable belongs to, and the order of the item in the instrument. It would also collect the names of the variables as they were originally present in each of the visit data sets.

```{r}
variable_map_vars <- c('variable','section', 'sec_ord', 'instrument', 
                       'inst_ord', 'var_ord', 'v1', 'v2', 'v3', 'v4', 'v5')

variable_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```


## Administrative Variables

### Initiating Section Map

We initiated a tibble that would serve for the subsection of the overall variable map.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### V1

We examined the administrative variables, such as Group assignment, subject ID, and time measurements. 

```{r}
vars <- v1 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars
```

We found that `SUBJECT1` and `TEST_V1` contained only missing values, and so they were dropped. There was no variable for GROUP assignment in the first visit data set.

```{r}
sum(!is.na(v1$SUBJECT1))
sum(!is.na(v1$TEST_V1))

drop_v1 <- c('SUBJECT1', 'TEST_V1')

vars <- v1 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars <- setdiff(vars, drop_v1)

vars
```

We standardized these variable names. We add a null value for a "group" variable from V1, as it was not present in the visit 2 data set. We added these values to the section variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed <- c(vars_renamed, "group")

vars_renamed[vars_renamed == "endtime_1"] <- "endtime"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Administrative',
  'sec_ord' = 1,
  'instrument' = 'Administrative',
  'inst_ord' = 1,
  'item_ord' = c(5,1,6,4,3,8,9,7,2),
  'v1' = c(vars,NA),
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


sec_map <- rbind(sec_map, set_tibble)
sec_map
```

### V2

We examined the administrative variables, such as Group assignment, subject ID, and time measurements.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars
```

We found that `TEST_V2` contained only missing values, and so it was dropped; `II_V1` was dropped as it was already present in the V1 data set, and there was an `II_V2` for this second data set and all rows had a value for `II_V2`. There was no variable for GROUP assignment in the second visit data set.

```{r}
sum(!is.na(v2$II_V2)) == nrow(v2)
sum(!is.na(v2$TEST_V2))

drop_v2 <- c('II_V1', 'TEST_V2')

vars <- v2 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars <- setdiff(vars, drop_v2)

vars
```

We standardized these variable names. We then appended these to the section variable map, 

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed <- c(vars_renamed)

vars_renamed[vars_renamed == "endtime_2"] <- "endtime"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v2' = vars,
)

sec_map <- full_join(sec_map, set_tibble, by='variable')
sec_map
```

### V3

We examined the administrative variables, such as Group assignment, subject ID, and time measurements.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars
```

We found that `TEST_V3` contained only missing values, and so it was dropped.
 
```{r}
sum(!is.na(v3$TEST_V3))

drop_v3 <- c('TEST_V3')

vars <- v3 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names. We then appended these to the section variable map, 

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed <- vars_renamed

vars_renamed[vars_renamed == "endtime_3"] <- "endtime"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

sec_map <- full_join(sec_map, set_tibble, by='variable')
sec_map
```

### V4

We examined the administrative variables, such as Group assignment, subject ID, and time measurements.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars
```

We found that `TEST_V4` contained missing values except for a single observation, and so it was dropped.
 
```{r}
sum(!is.na(v4$TEST_V4))

drop_v4 <- c('TEST_V4')

vars <- v4 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We then appended these to the section variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed <- vars_renamed

vars_renamed[vars_renamed == "endtime_4"] <- "endtime"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

sec_map <- full_join(sec_map, set_tibble, by='variable')
sec_map
```

### V5

We examined the administrative variables, such as Group assignment, subject ID, and time measurements.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars
```

We found that `TEST_V5` contained only missing values, and so it was dropped.
 
```{r}
sum(!is.na(v5$TEST_V5))

drop_v5 <- c('TEST_V5')

vars <- v5 %>%
  select(all_of(starts_with("TODAY")), all_of(starts_with("SUBJECT")),
         all_of(starts_with("II")), all_of(starts_with("VISIT")),
         all_of(starts_with("TEST")), all_of(starts_with("VISIT_TYPE")),
         all_of(starts_with("ENDTIME")), all_of(starts_with("ETIME")),
         all_of(starts_with("CTIME")), all_of(starts_with("GROUP"))
         ) %>%
  names()

vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We then appended these to the section variable map, 

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed <- vars_renamed

vars_renamed[vars_renamed == "endtime_5"] <- "endtime"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

sec_map <- full_join(sec_map, set_tibble, by='variable')
sec_map
```

### Appending to Global Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Screening Variables

Screening was performed with 5 instruments: a screening questionnaire, a Mini-Mental State Exam, Rapid Estimate of Adult Literacy in Medicine (REALM), anthropometric measures, and a locator form.

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Screening Instrument

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the screening instrument variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('GENDER', 'SQ_2', 'SQ_3', 'SQ_4', 'SQ_5', 'SQ_6', 'SQ_7', 'SQ_7A', 
          'SQ_7B', 'SQ_7C', 'SQ_7D', 'SQ_8', 'SQ_9', 'SQ_9L', 'SQ_10', 'SQ_11', 
          'SQ_12', 'SQ_13', 'SQ_14', 'SQ_15', 'SQ_16', 'SQ_17', 'SQ_18',
          'SQ_18A', 'SQ_18B', 'SQ_18C', 'SQ_18D', 'SQ_18E', 'SQ_18F', 'SQ_18G', 
          'SQ_18H', 'SQ_18I', 'SQ_19', 'SQ_20', 'SQ_21', 'SQ_22', 'SQ_22A', 
          'SQ_22B', 'SQ_22C', 'SQ_22D', 'SQ_22E', 'SQ_22F', 'SQ_22G', 'SQ_22H',
          'SQ_23')
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Screening Instrument',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The screening instrument was not used in V2. We appended an empty column for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars


vars <- v4 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars

vars <- v5 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the screening instrument variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the screening instrument variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the screening instrument variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("GENDER")), all_of(starts_with("SQ"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

#### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Mini Mental State Exam

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Mini Mental State instrument variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("MMS")), all_of(starts_with("RECAL")),
         all_of(starts_with("COUNT")), all_of(starts_with("NUM")),
         all_of(starts_with("OBJECT")), all_of(starts_with("PAPER"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned. Variables which were calculated in SPSS were dropped.

```{r}
vars <- c('MMS_1', 'MMS_1A', 'MMS_1B', 'MMS_1C', 'MMS_1D', 'MMS_1E',
          'MMS_2', 'MMS_2A', 'MMS_2B', 'MMS_2C', 'MMS_2D', 'MMS_2E',
          'MMS_3', 'MMS_3G', 'MMS_3H', 'MMS_3I', 'MMS_3J', 'RECAL1',
          'MMS_4', 'MMS_4A', 'MMS_4B', 'MMS_4C', 'MMS_4D', 'MMS_4E', 'MMS_4F',
          'COUNT', 
          'MMS4V', 'MMS4VA', 'MMS4VB', 'MMS4VC', 'MMS4VD', 'MMS4VE', 'MMS4VF',
          'NUM',
          'MMS_5', 'MMS_5A', 'MMS_5B', 'MMS_5C', 'MMS_5D', 'RECAL2',
          'MMS_6', 'MMS_6A', 'MMS_6B', 'MMS_6C', 'OBJECT',
          'MMS_7', 'MMS_8', 'MMS_8A', 'MMS_8B', 'MMS_8C', 'MMS_8D', 'PAPER',
          'MMS_9', 'MMS_10', 'MMS_11',
          'MMS_S')

drop_v1 <- c(drop_v1, "mms_score", "MMS_total", "MMS_severity")
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Mini Mental State Exam',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2-V4

The Mini Mental State Exam was not used in Visits 2-4. We appended empty columns for these visits.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("MMS")), all_of(starts_with("RECAL")),
         all_of(starts_with("COUNT")), all_of(starts_with("NUM")),
         all_of(starts_with("OBJECT")), all_of(starts_with("PAPER"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("MMS")), all_of(starts_with("RECAL")),
         all_of(starts_with("COUNT")), all_of(starts_with("NUM")),
         all_of(starts_with("OBJECT")), all_of(starts_with("PAPER"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("MMS")), all_of(starts_with("RECAL")),
         all_of(starts_with("COUNT")), all_of(starts_with("NUM")),
         all_of(starts_with("OBJECT")), all_of(starts_with("PAPER"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA, v3 = NA, v4 = NA)
```


##### V5

We examined the Mini Mental State instrument variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("MMS")), all_of(starts_with("RECAL")),
         all_of(starts_with("COUNT")), all_of(starts_with("NUM")),
         all_of(starts_with("OBJECT")), all_of(starts_with("PAPER"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
drop_v5 <- c(drop_v5, "mms_score_V5", "MMS_total_V5", "MMS_severity_V5")

vars <- setdiff(vars, drop_v5)
```

We standardized these variable names. Unfortunately, our standardizing function was unable to standardize all columns. We manually verified and re-assigned the standardized names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

vars_renamed <- c('mms_1a', 'mms_1b', 'mms_1c', 'mms_1d', 'mms_1e', 'mms_1', 
                  'mms_2a', 'mms_2b', 'mms_2c', 'mms_2d', 'mms_2e', 'mms_2', 
                  'mms_3', 'mms_4', 'mms_4v', 'mms_5', 'mms_6', 
                  'mms_7', 'mms_8', 'mms_9', 'mms_10', 'mms_11', 'mms_s', 
                  'mms_3g', 'mms_3h', 'mms_3i', 'mms_3j', 'mms_4a', 'mms_4b',
                  'mms_4c', 'mms_4d', 'mms_4e', 'mms_4f', 'mms_4va', 'mms_4vb',
                  'mms_4vc', 'mms_4vd', 'mms_4ve', 'mms_4vf', 'mms_5a', 
                  'mms_5b', 'mms_5c', 'mms_5d', 'mms_6a', 'mms_6b', 'mms_6c', 
                  'mms_8a', 'mms_8b', 'mms_8c', 'mms_8d',
                  'recal_1', 'recal_2', 'count', 'num', 'object', 'paper')

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by="variable")
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Rapid Estimate of Adult Literacy in Medicine (REALM)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the REALM instrument variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("REALM"))
         ) %>%
  relocate("REALM_S", .after=last_col()
           ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Rapid Estimate of Adult Literacy in Medicine (REALM)',
  'inst_ord' = 3,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2-V5

REALM was not used in V2-V5. We appended empty values for these visits.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("REALM"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("REALM"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("REALM"))
         ) %>%
  names()

vars

vars <- v5 %>%
  select(all_of(starts_with("REALM"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA, v3 = NA, v4 = NA, v5 = NA)
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Biological/Anthropometric Measures

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Biological/Anthropometric variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("WEIGHT")), all_of(starts_with("HEIGHT")),
         all_of(starts_with("CO")), all_of(starts_with("READ")),
         all_of(starts_with("WAIST_C"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned. Variables calculated by SPSS were dropped.

```{r}
vars <- c('WEIGHT', 'HEIGHT', 'WAIST_C', 'CO_V1', 'READ1_V1', 'READ2_V1', 'READ3_V5')

drop_v1 <- c(drop_v1, 'weight_kg_V1', 'weight_status_V1', 'height_meter_V1', 
             'height_meter_sq_V1')
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Anthropometrics',
  'inst_ord' = 4,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

We examined the Biological/Anthropometric variables.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("WEIGHT")), all_of(starts_with("HEIGHT")),
         all_of(starts_with("CO")), all_of(starts_with("READ")),
         all_of(starts_with("WAIST_C"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v2' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V3

We examined the Biological/Anthropometric variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("WEIGHT")), all_of(starts_with("HEIGHT")),
         all_of(starts_with("CO")), all_of(starts_with("READ")),
         all_of(starts_with("WAIST_C"))
         ) %>%
  names()

vars
```

We marked the variables that were calculated in SPSS as dropped. 

```{r}
drop_v3 <- c(drop_v3, 'weight_kg_V3', 'weight_status_V3', 'height_meter_V3', 
             'height_meter_sq_V3')

vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "weight_3"] <- "weight"
vars_renamed[vars_renamed == "height_3"] <- "height"
vars_renamed[vars_renamed == "waist_c_3"] <- "waist_c"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Biological/Anthropometric variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("WEIGHT")), all_of(starts_with("HEIGHT")),
         all_of(starts_with("CO")), all_of(starts_with("READ")),
         all_of(starts_with("WAIST_C"))
         ) %>%
  names()

vars
```

We marked the variables that were calculated in SPSS as dropped. 

```{r}
drop_v4 <- c(drop_v4, 'weight_kg_V4', 'weight_status_V4', 'height_meter_V4', 
             'height_meter_sq_V4')

vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "weight_4"] <- "weight"
vars_renamed[vars_renamed == "waist_c_4"] <- "waist_c"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Biological/Anthropometric variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("WEIGHT")), all_of(starts_with("HEIGHT")),
         all_of(starts_with("CO")), all_of(starts_with("READ")),
         all_of(starts_with("WAIST_C"))
         ) %>%
  names()

vars
```

We marked the variables that were calculated in SPSS as dropped. 

```{r}
drop_v5 <- c(drop_v5, 'weight_kg_V5', 'weight_status_V5', 'height_meter_V5', 
             'height_meter_sq_V5')

vars <- setdiff(vars, drop_v5)

vars <- setdiff(vars, "COUNT_V5")

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "weight_5"] <- "weight"
vars_renamed[vars_renamed == "waist_c_5"] <- "waist_c"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = "variable")
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

```{r}
sec_map
```

### Locator Form

The Locator Form was not included in the V1-V5 SPSS variables.

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Socioeconomic Status/Demographics/Homelessness/Criminal History Section

The section of Sociodemographics contained 3 instruments: Demographic/Background Information Questionnaire, Brief Homelessness Questionnaire, and the MacArthur Scale of Subjective Social Status.

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Demographic Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Demographic Instrument variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("DEM")), all_of(starts_with("DME"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned. Variables calculated by SPSS were dropped.

```{r}
vars <- c('DEM1V1', 'DEM2V1', 'DEM3V1', 'DEM4V1', 'DEM4V1A', 'DEM4V1B', 
          'DEM4V1C', 'DEM4V1D', 'DEM4V1E', 'DEM4V1F', 'DEM5V1', 'DEM5AV1',
          'DEM6V1', 'DEM6AV1', 'DME6BV1', 'DEM7V1', 'DEM7V1A', 'DEM7V1B', 
          'DEM7V1C', 'DEM7V1D', 'DEM7V1E', 'DEM8V1', 'DEM9V1', 'DEM10V1', 
          'DEM11V1', 'DEM12V1', 'DEM12V1A', 'DEM12V1B', 'DEM12V1C', 'DEM12V1D', 
          'DEM12V1E', 'DEM12V1F', 'DEM12V1G', 'DEM12V1H', 'DEM12V1I', 
          'DEM12V1J', 'DEM12V1K', 'DEM12V1L', 'DEM13V1', 'DEM13AV1', 'DEM13BV1',
          'DEM13CV1', 'DEM13DV1', 'DEM13EV1', 'DEM13FV1', 'DEM13GV1', 'DEM13HV1', 
          'DEM14V1', 'DEM14AV1', 'DEM14BV1', 'DEM14CV1', 'DEM14DV1', 'DEM14EV1', 
          'DEM14FV1', 'DEMO16G', 'DEM15V1', 'DEM16V1', 'DEM17V1', 'DEM18V1')
```

We standardized these variable names, including a manual point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed=="demo_16g"] <- 'dem_14g'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Demographics',
  'sec_ord' = 3,
  'instrument' = 'Demographic Questionnaire',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Demographic Instrument was not used on Visit 2. We added an empty column for this visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("DEM")), all_of(starts_with("DME"))
         ) %>%
  names()

vars

inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Demographic Instrument variables used in Visit 3.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("DEM")), all_of(starts_with("DME"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Demographic Instrument variables used in Visit 4.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("DEM")), all_of(starts_with("DME"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Demographic Instrument variables used in Visit 5.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("DEM")), all_of(starts_with("DME"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

In reviewing our instrument map, we found that `DEM14H` only occurred in V3-V5. We shifted the item order to reflect the items proper position.

```{r}
inst_map <- inst_map %>%
  mutate(section = "Demographics",
         sec_ord = 3,
         instrument = "Demographic Questionnaire",
         inst_ord = 1
  ) %>%
  mutate(item_ord = ifelse(item_ord > 54, item_ord + 1, item_ord)
         ) %>%
  mutate(item_ord = ifelse(variable == "dem_14h", 55, item_ord)
         ) %>%
  arrange(item_ord)
```


We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Brief Homelessness Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Brief Homelessness Questionnaire variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("BH"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('BH1V1', 'BH1V1Y', 'BH1V1M', 'BH1V1D', 'BH2V1', 'BH3V1', 'BH4V1',
          'BH4V1Y', 'BH4V1M', 'BH4V1D', 'BH5V1', 'BH6V1', 'BH7V1', 'BH7V1Y', 
          'BH7V1M', 'BH7V1W', 'BH8V1', 'BH9V1', 'BH10V1', 'BH11AV1', 'BH12AV1',
          'BH12AV1A', 'BH12AV1B', 'BH12AV1C', 'BH12AV1D', 'BH12AV1E', 
          'BH12AV1F', 'BH12AV1G', 'BH12AV1H', 'BH12AV1I', 'BH12AV1J', 
          'BH12AV1K', 'BH12AV1L', 'BH13AV1', 'BH13AV1A', 'BH13AV1B', 'BH13AV1C', 
          'BH13AV1D', 'BH13AV1E', 'BH13AV1F', 'BH13BV1', 'BH13BV1A', 'BH13BV1B', 
          'BH13BV1C', 'BH13BV1D', 'BH13BV1E', 'BH13BV1F', 'BH13BV1G', 'BH13BV1H',
          'BH13CV1', 'BH13CV1A', 'BH13CV1B', 'BH13CV1C', 'BH13CV1D', 'BH13CV1E', 
          'BH13CV1F', 'BH13CV1G', 'BH13CV1H', 'BH14V1', 'BH14BV1', 'BH14BV1Y', 
          'BH14BV1M', 'BH14BV1W', 'BH15V1', 'BH15AV1', 'BH16V1', 'BH17V1', 
          'BH17V1Y', 'BH17V1M', 'BH17V1W', 'BH18V1', 'BH18BV1', 'BH18BV1A', 
          'BH18BV1B', 'BH18BV1C', 'BH18BV1D', 'BH18BV1E', 'BH18BV1F', 'BH18BV1G', 
          'BH18BV1H', 'BH18B1V1', 'BH19V1', 'BH20V1')
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Demographics',
  'sec_ord' = 3,
  'instrument' = 'The Brief Homelessness Questionnaire',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Brief Homelessness Questionnaire was not used on Visit 2. We added an empty column for this visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("BH"))
         ) %>%
  names()

vars

inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Brief Homelessness Questionnaire variables used in Visit 3.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("BH"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Demographic Instrument variables used in Visit 4.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("BH"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Demographic Instrument variables used in Visit 5.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("BH"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a single variable that was misnamed. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed[vars_renamed == 'bh_18bva'] <- 'bh_18ba'

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

In reviewing our instrument map, we found that `BH14BVD` only occurred in V4 & V5. We shifted the item order to reflect the items proper position.

```{r}
inst_map <- inst_map %>%
  mutate(section = "Demographics",
         sec_ord = 3,
         instrument = "The Brief Homelessness Questionnaire",
         inst_ord = 2
  ) %>%
  mutate(item_ord = ifelse(item_ord > 63, item_ord + 1, item_ord)
         ) %>%
  mutate(item_ord = ifelse(variable == "bh_14bd", 64, item_ord)
         ) %>%
  arrange(item_ord)
```


We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### MacArthur Scale of Subjective Social Status

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the MacArthur Scale of Subjective Social Status variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("sss")), all_of(starts_with("well_being"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Demographics',
  'sec_ord' = 3,
  'instrument' = 'MacArthur Scale of Subjective Social Status',
  'inst_ord' = 3,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The MacArthur Scale of Subjective Social Status had different variables added in Visit 2. We appended these to the bottom of the variable list for this instrument.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("sss")), all_of(starts_with("well_being"))
         ) %>%
  names()

vars
```

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Demographics',
  'sec_ord' = 3,
  'instrument' = 'MacArthur Scale of Subjective Social Status',
  'inst_ord' = 3,
  'item_ord' = seq(from = nrow(inst_map)+1, to = length(vars)+nrow(inst_map)),
  'v1' = NA,
  'v2' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)

inst_map <- inst_map %>%
  add_column(v2 = NA)

inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V3

We examined the MacArthur Scale of Subjective Social Status variables used in Visit 3.

```{r}
vars <- v3 %>%
 select(all_of(starts_with("sss")), all_of(starts_with("well_being"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the MacArthur Scale of Subjective Social Status variables used in Visit 4.

```{r}
vars <- v4 %>%
 select(all_of(starts_with("sss")), all_of(starts_with("well_being"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the MacArthur Scale of Subjective Social Status variables used in Visit 5.

```{r}
vars <- v5 %>%
 select(all_of(starts_with("sss")), all_of(starts_with("well_being"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)
vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Health, Mental Health, and Health Behaviors

The section of Health contained 17 instruments: Patient Health Questionnaire, SF12 Health Survey, Health Related Quality of Life, Self-Rated Health, TCU Drug Screen 5, Primary Care PTSD Screen (PC-PTSD), BRFSS Adverse Childhood Experience (ACE) Module, Tobacco History, Heaviness of Smoking Index, Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep, Alcohol Quantity and Frequency Questionnaire, Alcohol and Drug Timeline Follow-Back (TLFB), Personality Beliefs Questionnaire, USDA Food Security Survey, Meal Survey, TCU CJ Client Evaluation of Self and Treatment (CJ CEST), and Sexual Behaviors.

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Patient Health Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Patient Health Questionnaire variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("phq"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v1 %>%
    select(all_of(starts_with("phq"))
         ) %>%
  select(all_of(contains("dichot")), all_of(contains("mdd")),
         all_of(contains("symp")), all_of(contains("gad"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)
vars <- setdiff(vars, drop_v1)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Patient Health Questionnaire',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The PHQ was not used in Visit 2. We added an empty column for this visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("phq"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Patient Health Questionnaire variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("phq"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v3 %>%
    select(all_of(starts_with("PHQ"))
         ) %>%
  select(all_of(contains("dichot")), all_of(contains("mdd")),
         all_of(contains("symp")), all_of(contains("gad"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)
vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Patient Health Questionnaire variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("phq"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v4 %>%
    select(all_of(starts_with("PHQ"))
         ) %>%
  select(all_of(contains("dichot")), all_of(contains("mdd")),
         all_of(contains("symp")), all_of(contains("gad"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)
vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the Patient Health Questionnaire variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("phq"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v5 %>%
    select(all_of(starts_with("PHQ"))
         ) %>%
  select(all_of(contains("dichot")), all_of(contains("mdd")),
         all_of(contains("symp")), all_of(contains("gad"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)
vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### SF 12 Health Survey

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the SF 12 Health Survey variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)
vars <- setdiff(vars, drop_v1)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'SF 12 Health Survey',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The SF 12 Health Survey was not used in visit 2. We added an empty column for this visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the SF 12 Health Survey variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)
vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the SF 12 Health Survey variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)
vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the SF 12 Health Survey variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)
vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Health Related Quality of Life

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Health Related Quality of Life variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("hrq"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Health Related Quality of Life',
  'inst_ord' = 3,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Health Related Quality of Life was not used in visit 2. We added an empty column for this visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("hrq"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Health Related Quality of Life variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("hrq"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Health Related Quality of Life variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("hrq"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the Health Related Quality of Life variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("hrq"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Self-Rated Health

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Self-Rated Health variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("s"))
         ) %>%
  select(-c(all_of(starts_with("sq")), all_of(starts_with("sss")),
            all_of(starts_with("SUBJECT")), all_of(starts_with("substance")),
            all_of(starts_with("spouse")), all_of(starts_with("sb"))
            )
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('S2_V1', 'S2_V1A', 'S2_V1B', 'S2_V1C', 'S2_V1D', 'S2_V1E', 'S2_V1F', 
          'S2_V1G', 'S2_V1H', 'SR3A_V1', 'SR3B_V1', 'SR3C_V1', 'SR3D_V1', 
          'SR3E_V1', 'SR3F_V1', 'S3_V1', 'S4_V1', 'S4_V1A', 'S4_V1B', 'S4_V1C', 
          'S4_V1D', 'S4_V1E', 'S4_V1F', 'S4_V1G', 'S4_V1H', 'S5_V1', 'S6_V1', 
          'S7_V1', 'S7_V1A', 'S7_V1B', 'S7_V1C', 'S7_V1D', 'S7_V1E', 'S7_V1F', 
          'S7_V1G', 'S8_V1', 'S8_V1A', 'S8_V1B', 'S8_V1C', 'S8_V1D', 'S8_V1E', 
          'S8_V1F', 'S8_V1G', 'S9_V1', 'S9_V1A', 'S9_V1B', 'S9_V1C', 'S9_V1D', 
          'S9_V1E', 'S9_V1F', 'S9_V1G', 'S9_V1H', 'S9_V1I', 'S9_V1J', 'S9_V1K', 
          'S9_V1L', 'S9_V1M', 'S9_V1N', 'S9_V1O', 'S9_V1P', 'S9_V1Q', 'S9_V1R',
          'S10_V1', 'S11_V1', 'S12_V1', 'S13_V1', 'S14_V1', 'S14_V1A', 'S14_V1B', 
          'S14_V1C', 'S14_V1D', 'S15_V1', 'S16_V1', 'S17_V1', 'S18_V1', 
          'S18_V1A', 'S18_V1B', 'S18_V1C', 'S18_V1D', 'S18_V1E', 'S18_V1F', 
          'S18_V1G', 'S18_V1H', 'S18_V1I', 'S18_V1J', 'S18_V1K', 'S18_V1L', 
          'S19_V1', 'S20_V1', 'S21_V1', 'S22_V1', 'S23_V1', 'S24_V1', 'S24_V1A', 
          'S24_V1B', 'S24_V1C', 'S24_V1D', 'S24_V1E', 'S24_V1F', 'S25A_V1', 
          'S26A_V1', 'S26A_V1A', 'S26A_V1B', 'S26A_V1C', 'S26A_V1D', 'S26A_V1E', 
          'S26A_V1F', 'S26A_V1G', 'S25B_V1', 'S26B_V1', 'S26B_V1A', 'S26B_V1B', 
          'S26B_V1C', 'S26B_V1D', 'S26B_V1E', 'S26B_V1F', 'S26B_V1G',
          'S25C_V1', 'S26C_V1', 'S26C_V1A', 'S26C_V1B', 'S26C_V1C', 'S26C_V1D', 
          'S26C_V1E', 'S26C_V1F', 'S26C_V1G', 'S25D_V1', 'S26D_V1', 'S26D_V1A', 
          'S26D_V1B', 'S26D_V1C', 'S26D_V1D', 'S26D_V1E', 'S26D_V1F', 'S26D_V1G',
          'S25E_V1', 'S26E_V1', 'S26E_V1A', 'S26E_V1B', 'S26E_V1C', 'S26E_V1D', 
          'S26E_V1E', 'S26E_V1F', 'S26E_V1G', 'S27_V1', 'S28_V1', 'S29_V1', 
          'S30_V1', 'S30_V1A', 'S30_V1B', 'S30_V1C', 'S30_V1D', 'S30_V1E', 
          'S30_V1F', 'S30_V1G', 'S31_V1', 'S32_V1', 'S32_V1A', 'S32_V1B', 
          'S32_V1C', 'S32_V1D', 'S32_V1E', 'S32_V1F', 'S32_V1G', 'S32_V1H', 
          'S32_V1I', 'S33_V1', 'S34_V1', 'S35_V1', 'S36_V1', 'S37_V1', 
          'S38_V1', 'S39A_V1', 'S39B_V1', 'S40_V1', 'S41_V1', 'S42_V1', 'S43_V1',
          'S43_V1A', 'S43_V1B', 'S43_V1C', 'S43_V1D', 'S43_V1E', 'S43_V1F', 
          'S43_V1G', 'S43_V1H', 'S43_V1I')

```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Self-Rated Health',
  'inst_ord' = 4,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

Self-Rated Health was not used in visit 2. We added an empty column for this visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("s"))
         ) %>%
  select(-c(all_of(starts_with("sq")), all_of(starts_with("sss")),
            all_of(starts_with("SUBJECT")), all_of(starts_with("substance")),
            all_of(starts_with("spouse")), all_of(starts_with("sb"))
            )
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Self-Rated Health variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("s"))
         ) %>%
  select(-c(all_of(starts_with("sq")), all_of(starts_with("sss")),
            all_of(starts_with("SUBJECT")), all_of(starts_with("substance")),
            all_of(starts_with("spouse")), all_of(starts_with("sb"))
            )
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)
vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Self-Rated Health variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("s"))
         ) %>%
  select(-c(all_of(starts_with("sq")), all_of(starts_with("sss")),
            all_of(starts_with("SUBJECT")), all_of(starts_with("substance")),
            all_of(starts_with("spouse")), all_of(starts_with("sb"))
            )
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)
vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the Self-Rated Health variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("s"))
         ) %>%
  select(-c(all_of(starts_with("sq")), all_of(starts_with("sss")),
            all_of(starts_with("SUBJECT")), all_of(starts_with("substance")),
            all_of(starts_with("spouse")), all_of(starts_with("sb"))
            )
         ) %>%
  names()

vars
```

We further isolated the variables which were calculated in SPSS, which we dropped.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("hs"))
         ) %>%
  select(-all_of(starts_with("hsi"))
         ) %>%
  select(all_of(contains("dichotomous"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)
vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### TCU Drug Screen 5

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the TCU Drug Screen 5 variables. The instrument was not used in visit 1.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("ds"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("ds"))
         ) %>%
  names()

vars
```

Variables calculated in SPSS were dropped.

```{r}
drop_v2 <- c(drop_v2, 'DS10_V2', 'DS11_V2')

vars <- setdiff(vars, drop_v2)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'TCU Drug Screen 5',
  'inst_ord' = 5,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)

inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V3

The TCU Drug Screen 5 was not used in visit 3. We added an empty column for this visit.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("ds"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v3 = NA)
```

##### V4

We examined the TCU Drug Screen 5 variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("ds"))
         ) %>%
  names()

vars
```

Variables calculated in SPSS were dropped.

```{r}
drop_v4 <- c(drop_v4, 'DS10_V4', 'DS11_V4')

vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```


##### V5

We examined the TCU Drug Screen 5 variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("ds"))
         ) %>%
  names()

vars
```

Variables calculated in SPSS were dropped.

```{r}
drop_v5 <- c(drop_v5, 'DS10_V5', 'DS11_V5')

vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Primary Care PTSD Screen (PC-PTSD)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Primary Care PTSD Screen (PC-PTSD) variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("pos"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)

vars
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Primary Care PTSD Screen (PC-PTSD)',
  'inst_ord' = 6,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2 - V5

The Primary Care PTSD Screen (PC-PTSD) was not used in visits 2 through 5. We added an empty column for these visits.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  names()

vars

vars <- v5 %>%
  select(all_of(starts_with("ptsd"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA, v3 = NA, v4 = NA, v5 = NA)
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### BRFSS Adverse Childhood Experience (ACE) Module

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 - V5

We examined the BRFSS Adverse Childhood Experience (ACE) Module variables. This instrument was not used in visits 1, 3, 4, or 5 so we added an empty column for those visits.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("bra"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'BRFSS Adverse Childhood Experience (ACE) Module',
  'inst_ord' = 7,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars,
  'v3' = NA,
  'v4' = NA,
  'v5' = NA
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)

inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Tobacco History

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Tobacco History variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  select(all_of(contains("val"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('T1_V1', 'T2_V1', 'T3A_V1', 'T3A_V1Y', 'T3A_V1M', 'T3B_V1', 'T4_V1', 
          'T5_V1', 'T5A1_V1', 'T5A2_V1', 'T5A3_V1', 'T5A4_V1', 'T5A5_V1', 
          'T5A6_V1', 'T6_V1', 'T6A1_V1', 'T6A2_V1', 'T6A3_V1', 'T6A4_V1', 
          'T6A5_V1', 'T6A6_V1', 'T7_V1', 'T8_V1', 'T9_V1', 'T10_V1', 'T11_V1', 
          'T12_V1', 'T12A_V1', 'T12B_V1', 'T13_V1', 'T14_V1', 'T14_V1A', 
          'T14_V1B', 'T14_V1C', 'T14_V1D', 'T14_V1E', 'T14_V1F', 'T14_V1G', 
          'T14_V1H', 'T14_V1I', 'T15_V1', 'T16_V1', 'T17_V1', 'T18_V1', 
          'T19_V1', 'T20_V1', 'T21_V1', 'T22_V1', 'T23_V1', 'T23_V1A', 
          'T23_V1B', 'T23_V1C', 'T23_V1D', 'T23_V1E', 'T23_V1F', 'T23_V1G', 
          'T23_V1H', 'T24_V1', 'T25_V1', 'T26A_V1', 'T26A_V1A', 'T26A_V1B', 
          'T26A_V1C', 'T26A_V1D', 'T26A_V1E', 'T26A_V1F', 'T27_V1', 'T28_V1', 
          'T29_V1', 'T30_V1', 'T31_V1', 'T31_V1A', 'T31_V1B', 'T31_V1C', 
          'T31_V1D', 'T31_V1E', 'T31_V1F', 'T31_V1G', 'T31_V1H', 'T31_V1I', 
          'T31_V1J', 'T31B_V1', 'T31B_V1A', 'T31B_V1B', 'T31B_V1C', 'T32_V1', 
          'T33_V1', 'T33_V1A', 'T33_V1B', 'T33_V1C', 'T33_V1D', 'T33_V1E', 
          'T33_V1F', 'T33_V1G', 'T33_V1H', 'T33_V1I', 'T33_V1J', 'T34_V1', 
          'T35_V1', 'T36_V1', 'T37_V1', 'T38_V1', 'T39_V1', 'T40_V1')
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "T31B_V1"] <- "t_31_b"
vars_renamed[vars_renamed == "T31_V1B"] <- "t_31b"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Tobacco History',
  'inst_ord' = 8,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Tobacco History was not used in Visit 2. We added an empty column for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Tobacco History variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  select(all_of(contains("val"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "T31B_V3"] <- "t_31_b"
vars_renamed[vars_renamed == "T31_V3B"] <- "t_31b"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Tobacco History variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  select(all_of(contains("val"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "T31B_V4"] <- "t_31_b"
vars_renamed[vars_renamed == "T31_V4B"] <- "t_31b"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Tobacco History variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("t"))
         ) %>%
  select(-c(all_of(starts_with("TODAY")), all_of(starts_with("time")),
            all_of(starts_with("TEST")), all_of(starts_with("TCU")),
            all_of(starts_with("TQ"))
            )
         ) %>%
  select(all_of(contains("val"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "T31B_V5"] <- "t_31_b"
vars_renamed[vars_renamed == "T31_V5B"] <- "t_31b"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Heaviness of Smoking Index

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Heaviness of Smoking Index (HSI) variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  select(-c(all_of(contains('1')), all_of(contains('2'))
            )
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)

vars
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Heaviness of Smoking Index (HSI)',
  'inst_ord' = 9,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Heaviness of Smoking Index was not used in Visit 2. We added an empty column for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Heaviness of Smoking Index (HSI) variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  select(-c(all_of(contains('1')), all_of(contains('2'))
            )
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)

vars
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'hsi_23'] <- 'hsi_2'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

WWe examined the Heaviness of Smoking Index (HSI) variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  select(-c(all_of(contains('1')), all_of(contains('2'))
            )
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)

vars
```

We standardized these variable names, including a point-fix of a variable that could not be automatically standardized. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'hsi_24'] <- 'hsi_2'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Heaviness of Smoking Index (HSI) variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated in SPSS

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("hsi"))
         ) %>%
  select(-c(all_of(contains('1')), all_of(contains('2'))
            )
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("brs"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'BRFSS Inadequate Sleep',
  'inst_ord' = 10,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep Module was not used in Visit 2. We added an empty column for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("brs"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep Module variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("brs"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

WWe examined the Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep Module variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("brs"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Behavioral Risk Factor Surveillance System (BRFSS) Inadequate Sleep Module variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("brs"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Alcohol Quantity and Frequency Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Alcohol Quantity and Frequency Questionnaire variables.

```{r}
vars <- v1 %>%
  select(all_of(contains("DRINKS")), all_of(starts_with("af"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'af_6sa'] <- 'af_7sa'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Alcohol Quantity and Frequency Questionnaire',
  'inst_ord' = 11,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Alcohol Quantity and Frequency Questionnaire was not used in Visit 2. We added an empty column for that visit.

```{r}
vars <- v2 %>%
  select(all_of(contains("DRINKS")), all_of(starts_with("af"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```

##### V3

We examined the Alcohol Quantity and Frequency Questionnaire variables.

```{r}
vars <- v3 %>%
  select(all_of(contains("DRINKS")), all_of(starts_with("af"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'af_6sa'] <- 'af_7sa'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

WWe examined the Alcohol Quantity and Frequency Questionnaire variables.

```{r}
vars <- v4 %>%
  select(all_of(contains("DRINKS")), all_of(starts_with("af"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'af_6sa'] <- 'af_7sa'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Alcohol Quantity and Frequency Questionnaire variables.

```{r}
vars <- v5 %>%
  select(all_of(contains("DRINKS")), all_of(starts_with("af"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'af_6sa'] <- 'af_7sa'

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Alcohol and Drug Timeline Follow-Back (TLFB)

The Alcohol and Drug Timeline Follow-Back (TLFB) was not included in the V1-V5 SPSS variables.


### Personality Beliefs Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1-V5

We examined the Personality Beliefs Questionnaire variables. The Personality Beliefs Questionnaire was not used in Visits 1, 3, 4, or 5 so we added empty columns for those visits.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("pbq"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("pbq"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("pbq"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Personality Beliefs Questionnaire',
  'inst_ord' = 13,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars,
  'v3' = NA,
  'v4' = NA,
  'v5' = NA
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### USDA Food Security Survey

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the USDA Food Security Survey variables. The USDA Food Security Survey was not used in Visits 1 so we added an empty columns for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  select(all_of(contains("dichotomous")), all_of(contains("score")),
         all_of(contains("total")), all_of(starts_with("fss_"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'USDA Food Security Survey',
  'inst_ord' = 14,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars,
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V3

We examined the USDA Food Security Survey variables. 

```{r}
vars <- v3 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  select(all_of(contains("dichotomous")), all_of(contains("score")),
         all_of(contains("total")), all_of(starts_with("fss_"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the USDA Food Security Survey variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  select(all_of(contains("dichotomous")), all_of(contains("score")),
         all_of(contains("total")), all_of(starts_with("fss_")),
         all_of(contains("e")), all_of(contains("f_"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the USDA Food Security Survey variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("fss"))
         ) %>%
  select(all_of(contains("dichotomous")), all_of(contains("score")),
         all_of(contains("total")), all_of(starts_with("fss_"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Meal Survey

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Meal Survey variables. 

```{r}
vars <- v1 %>%
  select(all_of(starts_with("ms"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "ms_8"] <- "ms_4"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Meal Survey',
  'inst_ord' = 15,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Meal Survey was not used in Visits 2 so we added an empty columns for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("ms"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Meal Survey variables. 

```{r}
vars <- v3 %>%
  select(all_of(starts_with("ms"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Meal Survey variables. 

```{r}
vars <- v4 %>%
  select(all_of(starts_with("ms"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Meal Survey variables. 

```{r}
vars <- v5 %>%
  select(all_of(starts_with("ms"))
         ) %>%
  names()

vars
```

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "ms_8"] <- "ms_4"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### TCU CJ Client Evaluation of Self and Treatment (CJ CEST)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the TCU CJ Client Evaluation of Self and Treatment (CJ CEST) variables. The TCU CJ Client Evaluation of Self and Treatment (CJ CEST) was not used in Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  select(all_of(contains("r_"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
``` 


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'TCU CJ Client Evaluation of Self and Treatment (CJ CEST)',
  'inst_ord' = 16,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V3 & V5

The TCU CJ Client Evaluation of Self and Treatment (CJ CEST) was not  used in Visits 3 or 5. We added empty columns for these visits.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  names()

vars

vars <- v5 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v3 = NA)
```

##### V4

We examined the TCU CJ Client Evaluation of Self and Treatment (CJ CEST) variables. 

```{r}
vars <- v4 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("cj"))
         ) %>%
  select(all_of(contains("r_"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

```{r}
inst_map <- inst_map %>%
  add_column(v5 = NA)
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Sexual Behaviors

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 - V5

We examined the Sexual Behaviors variables. The Sexual Behaviors questionnaire was only used in Visit 1, so we added empty columns for Visits 2-5

```{r}
vars <- v1 %>%
  select(all_of(starts_with("sb"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("sb"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("sb"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("sb"))
         ) %>%
  names()

vars

vars <- v5 %>%
  select(all_of(starts_with("sb"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('SB1_V1', 'SB2_V1', 'SB3_V1', 'SB4_V1', 'SB5_V1', 'SB6_V1', 'SB7_V1',
          'SB7_V1A', 'SB7_V1B', 'SB7_V1C', 'SB7_V1D', 'SB7_V1E', 'SB7_V1F', 
          'SB7_V1G', 'SB8_V1', 'SB9_V1')
```

 
We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Sexual Behaviors',
  'inst_ord' = 17,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars,
  'v2' = NA,
  'v3'= NA,
  'v4' = NA,
  'v5' = NA
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Stress

The section of Stress contained 6 instruments: Detroit Area Study Assessment of Day-to-Day Discrimination, MacArthur Major Discrimination, Urban Life Stress Scale, Personal Victimization, Perceived Stress Scale, and Distress Tolerance Scale..

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Detroit Area Study Assessment of Day-to-Day Discrimination

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Detroit Area Study Assessment of Day-to-Day Discrimination variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)
``` 


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Detroit Area Study Assessment of Day-to-Day Discrimination',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V2

The Detroit Area Study Assessment of Day-to-Day Discrimination was not used in Visits 2 so we added an empty columns for that visit.

```{r}
vars <- v2 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Detroit Area Study Assessment of Day-to-Day Discrimination variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Detroit Area Study Assessment of Day-to-Day Discrimination variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Detroit Area Study Assessment of Day-to-Day Discrimination variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("dd"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variable names, including a point-fix of a misnamed variable. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == "ms_8"] <- "ms_4"

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### MacArthur Major Discrimination

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 - V5

We examined the MacArthur Major Discrimination variables. MacArthur Major Discrimination was only used in Visit 2, so we added empty columns for the other Visits.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  names()

vars


vars <- v5 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("mmd"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
``` 


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'MacArthur Major Discrimination',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars,
  'v3' = NA,
  'v4' = NA,
  'v5' = NA
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Urban Life Stress Scale

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the Urban Life Stress Scale variables. The Urban Life Stress Scale was not used for Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
``` 


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Urban Life Stress Scale',
  'inst_ord' = 3,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V3

We examined the Urban Life Stress Scale variables. 

```{r}
vars <- v3 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Urban Life Stress Scale variables. 

```{r}
vars <- v4 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Urban Life Stress Scale variables. 

```{r}
vars <- v5 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("uls"))
         ) %>%
  select(all_of(contains("total"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Personal Victimization

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the Personal Victimization variables. Personal Victimization was not used for Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("pv"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("pv"))
         ) %>%
  names()

vars
```

We standardized these variable names manually, as their format was incompatible with our standardization function. We added these values to the instrument variable map.

```{r}
vars_renamed <- c('pv_1', 'pv_2', 'pv_3')

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Personal Victimization',
  'inst_ord' = 4,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V3

We examined the Personal Victimization variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("pv"))
         ) %>%
  names()

vars
```

We standardized these variable names manually, as their format was incompatible with our standardization function. We added these values to the instrument variable map.

```{r}
vars_renamed <- c('pv_1', 'pv_2')

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Personal Victimization variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("pv"))
         ) %>%
  names()

vars
```

We standardized these variable names manually, as their format was incompatible with our standardization function. We added these values to the instrument variable map.

```{r}
vars_renamed <- c('pv_1', 'pv_2')

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Personal Victimization variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("pv"))
         ) %>%
  names()

vars
```

We standardized these variable names manually, as their format was incompatible with our standardization function. We added these values to the instrument variable map.

```{r}
vars_renamed <- c('pv_1', 'pv_2', 'pv_3')

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Perceived Stress Scale

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the Perceived Stress Scale variables. The Perceived Stress Scale was not used for Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("r_"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Perceived Stress Scale',
  'inst_ord' = 5,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V3

We examined the Perceived Stress Scale variables. 

```{r}
vars <- v3 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("r_"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Perceived Stress Scale variables. 

```{r}
vars <- v4 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("r_"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Perceived Stress Scale variables. 

```{r}
vars <- v5 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("ps"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("r_"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Distress Tolerance Scale (DTS)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the Distress Tolerance Scale (DTS) variables. The Distress Tolerance Scale (DTS) was not used for Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v2 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  select(all_of(starts_with("dts_")), all_of(contains("r_"))
         ) %>%
  names()

drop_v2 <- c(drop_v2, dropping)

vars <- setdiff(vars, drop_v2)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Distress Tolerance Scale (DTS)',
  'inst_ord' = 6,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```


##### V3

We examined the Distress Tolerance Scale (DTS) variables. 

```{r}
vars <- v3 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  select(all_of(starts_with("dts_")), all_of(contains("r_"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Distress Tolerance Scale (DTS) variables. 

```{r}
vars <- v4 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  select(all_of(starts_with("dts_")), all_of(contains("r_"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Distress Tolerance Scale (DTS) variables. 

```{r}
vars <- v5 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("dts"))
         ) %>%
  select(all_of(starts_with("dts_")), all_of(contains("r_"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```


### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Negative Affect

The section of Stress contained 2 instruments: Aggression Questionnaire (AQ-12) and Center for Epidemiological Studies Depression (CES-D)

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Aggression Questionnaire (AQ-12)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Aggression Questionnaire (AQ-12) variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("aq"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- "AQ"

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Negative Affect',
  'sec_ord' = 6,
  'instrument' = 'Aggression Questionnaire (AQ-12)',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Aggression Questionnaire (AQ-12) was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("aq"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Aggression Questionnaire (AQ-12) variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("aq"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- "AQ_V3"

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Aggression Questionnaire (AQ-12) variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("aq"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- "AQ_V4"

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Aggression Questionnaire (AQ-12) variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("aq"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- "AQ_V5"

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Center for Epidemiological Studies Depression (CES-D)

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Center for Epidemiological Studies Depression (CES-D) variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("dichot")),
         all_of(contains("r"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Negative Affect',
  'sec_ord' = 6,
  'instrument' = 'Center for Epidemiological Studies Depression (CES-D)',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Center for Epidemiological Studies Depression (CES-D) was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3


We examined the Center for Epidemiological Studies Depression (CES-D) variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("dichot")),
         all_of(contains("r"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4


We examined the Center for Epidemiological Studies Depression (CES-D) variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("dichot")),
         all_of(contains("r"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5


We examined the Center for Epidemiological Studies Depression (CES-D) variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("ces"))
         ) %>%
  select(all_of(contains("total")), all_of(contains("dichot")),
         all_of(contains("r"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Interpersonal/Intrapersonal Resources

The section of Interpersonal/Intrapersonal Resources contained 6 instruments: Interpersonal Support Evaluation List, Religious Participation, Lubben Social Network Scale 6, Homeless Timeline Follow Back (TLFB), Resource Utilization Questionnaire, Barriers to Phone Based Case Management.

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Interpersonal Support Evaluation List

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Interpersonal Support Evaluation List variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("is"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("is"))
         ) %>%
  select(all_of(contains("app_")), all_of(contains("el_")),
         all_of(contains("tan_")), all_of(contains("r"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Interpersonal Support Evaluation List',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Interpersonal Support Evaluation List was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("is"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Interpersonal Support Evaluation List variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("is"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("is"))
         ) %>%
  select(all_of(contains("app_")), all_of(contains("el_")),
         all_of(contains("tan_")), all_of(contains("r"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Interpersonal Support Evaluation List variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("is"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("is"))
         ) %>%
  select(all_of(contains("app_")), all_of(contains("el_")),
         all_of(contains("tan_")), all_of(contains("r"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Interpersonal Support Evaluation List variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("is"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("is"))
         ) %>%
  select(all_of(contains("app_")), all_of(contains("el_")),
         all_of(contains("tan_")), all_of(contains("r"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Religious Participation

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Religious Participation variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("rp"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Religious Participation',
  'inst_ord' = 2,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Religious Participation Questionnaire was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("rp"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Religious Participation variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("rp"))
         ) %>%
  names()

vars
```


We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Religious Participation variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("rp"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Religious Participation variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("rp"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Lubben Social Network Scale 6

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Lubben Social Network Scale 6 variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v1 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  select(all_of(contains("_family")), all_of(contains("_friends")),
         all_of(contains("_total"))
         ) %>%
  names()

drop_v1 <- c(drop_v1, dropping)

vars <- setdiff(vars, drop_v1)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Lubben Social Network Scale 6',
  'inst_ord' = 3,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Lubben Social Network Scale 6 was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Lubben Social Network Scale 6 variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v3 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  select(all_of(contains("_family")), all_of(contains("_friends")),
         all_of(contains("_total"))
         ) %>%
  names()

drop_v3 <- c(drop_v3, dropping)

vars <- setdiff(vars, drop_v3)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Lubben Social Network Scale 6 variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v4 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  select(all_of(contains("_family")), all_of(contains("_friends")),
         all_of(contains("_total"))
         ) %>%
  names()

drop_v4 <- c(drop_v4, dropping)

vars <- setdiff(vars, drop_v4)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Lubben Social Network Scale 6 variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  names()

vars
```

We dropped the variables that were calculated with SPSS.

```{r}
dropping <- v5 %>%
  select(all_of(starts_with("lsn"))
         ) %>%
  select(all_of(contains("_family")), all_of(contains("_friends")),
         all_of(contains("_total"))
         ) %>%
  names()

drop_v5 <- c(drop_v5, dropping)

vars <- setdiff(vars, drop_v5)
``` 

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Homeless Timeline Follow Back (TLFB)

The Homeless Timeline Follow Back (TLFB) variables were not included in the V1-V5 SPSS variables.


### Resource Utilization Questionnaire

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Resource Utilization Questionnaire variables.

```{r}
vars <- v1 %>%
  select(all_of(matches("^(R[0-9]{1,3})"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Resource Utilization Questionnaire',
  'inst_ord' = 5,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2

The Resource Utilization Questionnaire was not used in Visit 2, so we added an empty column for that visit

```{r}
vars <- v2 %>%
  select(all_of(matches("^(R[0-9]{1,3})"))
         ) %>%
  names()

vars
```

```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA)
```


##### V3

We examined the Resource Utilization Questionnaire variables.

```{r}
vars <- v3 %>%
  select(all_of(matches("^(R[0-9]{1,3})"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the Resource Utilization Questionnaire variables.

```{r}
vars <- v4 %>%
  select(all_of(matches("^(R[0-9]{1,3})"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Resource Utilization Questionnaire variables.

```{r}
vars <- v5 %>%
  select(all_of(matches("^(R[0-9]{1,3})"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Barriers to Phone Based Case Management

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1

We examined the Barriers to Phone Based Case Management variables.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("bpm"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Barriers to Phone Based Case Management',
  'inst_ord' = 6,
  'item_ord' = seq(1:length(vars)),
  'v1' = vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V2 - 4

The Barriers to Phone Based Case Management questionnaire was not used in Visits 2-4, so we added empty columns for those visits. 

```{r}
vars <- v2 %>%
  select(all_of(starts_with("bpm"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("bpm"))
         ) %>%
  names()

vars

vars <- v4 %>%
  select(all_of(starts_with("bpm"))
         ) %>%
  names()

vars
```


```{r}
inst_map <- inst_map %>%
  add_column(v2 = NA, v3 = NA, v4 = NA)
```


##### V5

We examined the Barriers to Phone Based Case Management variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("bpm"))
         ) %>%
  names()

vars
```


We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Treatment Quality and Satisfaction

The section of Treatment Quality and Satisfaction contained # instruments: 

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### Treatment Quality and Satisfaction Survey

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 - V3

We examined the Treatment Quality and Satisfaction Survey variables. The Treatment Quality and Satisfaction Survey was not used in Visits 1 or 2, so we added an empty column for those visits.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("tq")), all_of(starts_with("yq"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("tq")), all_of(starts_with("yq"))
         ) %>%
  names()

vars

vars <- v3 %>%
  select(all_of(starts_with("tq")), all_of(starts_with("yq"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('TQ1_1V3', 'TQ2_1V3', 'TQ3_2V3', 'TQ4_2V3', 'TQ5_3V3', 'TQ6_3V3',
          'TQ7_3V3', 'TQ8_3V3', 'TQ9_2V3', 'TQ10_2V3', 'YQ11_2V3', 'TQ12_2V3', 
          'TQ13_2V3', 'TQ14_1V3', 'TQ15_3V3', 'TQ16_3V3', 'TQ17_3V3', 
          'TQ18_3V3', 'TQ14_2V3', 'TQ1_2V3', 'TQ2_2V3', 'TQ1_3V3', 'TQ2_3V3',
          'TQ3_3V3', 'TQ4_3V3', 'TQ9_3V3', 'TQ10_3V3', 'TQ11_3V3', 'TQ12_3V3',
          'TQ13_3V3', 'TQ14_3V3')
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'yq_11_2'] <- 'tq_11_2'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'Treatment Quality and Satisfaction',
  'sec_ord' = 8,
  'instrument' = 'Treatment Quality and Satisfaction Survey',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2' = NA, 
  'v3' = vars
)

set_tibble <- set_tibble %>%
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V4

We examined the Treatment Quality and Satisfaction Survey variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("tq")), all_of(starts_with("yq"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'yq_11_2'] <- 'tq_11_2'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the Treatment Quality and Satisfaction Survey variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("tq")), all_of(starts_with("yq"))
         ) %>%
  names()

vars
```

We standardized these variables. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed[vars_renamed == 'yq_11_2'] <- 'tq_11_2'

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = "variable")
inst_map
```

##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Staff Perceptions of the Link2Care App

Staff Perceptions of the Link2Care was not included in the V1-V5 SPSS variables.



## Ecological Momentary Assessment (EMA) Matrix

The Ecological Momentary Assessment variables were not included in the V1-V5 SPSS variables.


## COVID-19 Pandemic Related Data

The section of COVID-19 Pandemic Related Data contained 2 instruments: COVID-19 Vaccination Questionnaire, and the Pandemic Stress Index (PSI)

### Initializing Section Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Section.

```{r}
sec_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

### COVID-19 Vaccination

#### Initializing Instrument Map

We initiated a tibble that would serve for the subsection of the overall variable map, based on Instrument.

```{r}
inst_map <- tibble::tibble(!!!variable_map_vars, .rows = 0,
                               .name_repair = ~variable_map_vars)
```

##### V1 & V2

We examined the COVID-19 Vaccine variables. COVID-19 Vaccine data was not collected on Visit 1, so we added an empty column for that visit.

```{r}
vars <- v1 %>%
  select(all_of(starts_with("VAC"))
         ) %>%
  names()

vars

vars <- v2 %>%
  select(all_of(starts_with("VAC"))
         ) %>%
  names()

vars
```

Due to the variables not appearing in the proper order, and the fact they were not named in a way that would easily facilitate reordering, the order of these variables was manually assigned.

```{r}
vars <- c('VAC1_V2', 'VAC2_V2', 'VAC2_V2Y', 'VAC2_V2M', 'VAC2_V2D', 'VAC3_V2',
          'VAC3_V2Y', 'VAC3_V2M', 'VAC3_V2D')
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'section' = 'COVID-19 Pandemic Data',
  'sec_ord' = 11,
  'instrument' = 'COVID-19 Vaccination',
  'inst_ord' = 1,
  'item_ord' = seq(1:length(vars)),
  'v1' = NA,
  'v2'= vars
)

set_tibble <- set_tibble %>% 
  arrange(item_ord)


inst_map <- rbind(inst_map, set_tibble)
inst_map
```

##### V3

We examined the COVID-19 Vaccine variables.

```{r}
vars <- v3 %>%
  select(all_of(starts_with("VAC"))
         ) %>%
  names()

vars
```


We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v3' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V4

We examined the COVID-19 Vaccine variables.

```{r}
vars <- v4 %>%
  select(all_of(starts_with("VAC"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v4' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = 'variable')
inst_map
```

##### V5

We examined the COVID-19 Vaccine variables.

```{r}
vars <- v5 %>%
  select(all_of(starts_with("VAC"))
         ) %>%
  names()

vars
```

We standardized these variable names. We added these values to the instrument variable map.

```{r}
vars_renamed <- standardize_col_names(vars)

vars_renamed

set_tibble <- tibble::tibble(
  'variable' = vars_renamed,
  'v5' = vars,
)

inst_map <- full_join(inst_map, set_tibble, by = "variable")
inst_map
```



### The Pandemic Stress Index (PSI)

The Pandemic Stress Index was not included in the V1-V5 SPSS variables.


##### Appending to Section Map

We appended our instrument-based map to the section-based map.

```{r}
sec_map <- rbind(sec_map, inst_map)
```

### Appending Section to Overall Variable Map

We appended our section-based map to the overall variable map.

```{r}
variable_map <- rbind(variable_map, sec_map)
```

## Verifying Remaining Variables

We examined the variables that had otherwise failed to be assigned from each data set.

### V1

Visit 1's remaining variables were confirmed to be SPSS calculated variables that we intended to drop, and so they were added to the drop list for that data set.

```{r}
v1_remaining <- setdiff(setdiff(colnames(v1),variable_map$v1), drop_v1)

v1_remaining

checking_cols <- v1 %>%
  select(all_of(v1_remaining))

drop_v1 <- c(drop_v1, v1_remaining)
```

### V2

Visit 2's remaining variables were confirmed to be SPSS calculated variables that we intended to drop, and so they were added to the drop list for that data set.

```{r}
v2_remaining <- setdiff(setdiff(colnames(v2),variable_map$v2), drop_v2)

v2_remaining

checking_cols <- v2 %>%
  select(all_of(v2_remaining))

drop_v2 <- c(drop_v2, v2_remaining)
```

### V3

Visit 3's remaining variables were confirmed to be SPSS calculated variables that we intended to drop, and so they were added to the drop list for that data set.

```{r}
v3_remaining <- setdiff(setdiff(colnames(v3),variable_map$v3), drop_v3)

v3_remaining

checking_cols <- v3 %>%
  select(all_of(v3_remaining))

drop_v3 <- c(drop_v3, v3_remaining)
```

### V4

Visit 4's remaining variables were confirmed to be SPSS calculated variables that we intended to drop, and so they were added to the drop list for that data set.

```{r}
v4_remaining <- setdiff(setdiff(colnames(v4),variable_map$v4), drop_v4)

v4_remaining

checking_cols <- v4 %>%
  select(all_of(v4_remaining))

drop_v4 <- c(drop_v4, v4_remaining)
```

### V5

Visit 5's remaining variables were confirmed to be SPSS calculated variables that we intended to drop, and so they were added to the drop list for that data set.

```{r}
v5_remaining <- setdiff(setdiff(colnames(v5),variable_map$v5), drop_v5)

v5_remaining

checking_cols <- v5 %>%
  select(all_of(v5_remaining))

drop_v5 <- c(drop_v5, v5_remaining)
```

### Purging Temporary Containers

We purged containers that were no longer necessary.

```{r}
rm(variable_map_vars)
rm(inst_map)
rm(sec_map)
rm(set_tibble)
rm(checking_cols)
rm(vars)
rm(vars_renamed)
rm(v1_remaining)
rm(v2_remaining)
rm(v3_remaining)
rm(v4_remaining)
rm(v5_remaining)
rm(dropping)
```


# Reorganizing and renaming variables in each data set

## V1

We utilized our map to reorder and rename the variables in the V1 data set. 

```{r}
set_map <- variable_map %>%
  filter(!is.na(v1)) %>%
  arrange(sec_ord, inst_ord, item_ord) %>%
  select(variable, v1)

v1_reordered <- v1 %>%
  select(all_of(set_map$v1))

v1_reordered <- v1_reordered[,set_map$v1]

colnames(v1_reordered) <- set_map$variable
```

## V2

We utilized our map to reorder and rename the variables in the V2 data set.

```{r}
set_map <- variable_map %>%
  filter(!is.na(v2)) %>%
  arrange(sec_ord, inst_ord, item_ord) %>%
  select(variable, v2)

v2_reordered <- v2 %>%
  select(all_of(set_map$v2))

v2_reordered <- v2_reordered[,set_map$v2]

colnames(v2_reordered) <- set_map$variable
```

## V3

We utilized our map to reorder and rename the variables in the V3 data set.

```{r}
set_map <- variable_map %>%
  filter(!is.na(v3)) %>%
  arrange(sec_ord, inst_ord, item_ord) %>%
  select(variable, v3)

v3_reordered <- v3 %>%
  select(all_of(set_map$v3))

v3_reordered <- v3_reordered[,set_map$v3]

colnames(v3_reordered) <- set_map$variable
```

## V4

We utilized our map to reorder and rename the variables in the V4 data set. 

```{r}
set_map <- variable_map %>%
  filter(!is.na(v4)) %>%
  arrange(sec_ord, inst_ord, item_ord) %>%
  select(variable, v4)

v4_reordered <- v4 %>%
  select(all_of(set_map$v4))

v4_reordered <- v4_reordered[,set_map$v4]

colnames(v4_reordered) <- set_map$variable
```

## V5

We utilized our map to reorder and rename the variables in the V5 data set. 

```{r}
set_map <- variable_map %>%
  filter(!is.na(v5)) %>%
  arrange(sec_ord, inst_ord, item_ord) %>%
  select(variable, v5)

v5_reordered <- v5 %>%
  select(all_of(set_map$v5))

v5_reordered <- v5_reordered[,set_map$v5]

colnames(v5_reordered) <- set_map$variable
```


# Stacking Data into single set

We then merged and stacked our data sets into a single combined set, where each row represented a unique visit. This combined data set was organized based on our variable map.

```{r}
qds_all_visits <- v1_reordered %>%
  bind_rows(v2_reordered) %>%
  bind_rows(v3_reordered) %>%
  bind_rows(v4_reordered) %>%
  bind_rows(v5_reordered)

qds_all_visits <- qds_all_visits[,variable_map$variable]
```

## Purging Temporary Containers

We purged containers that were no longer necessary.

```{r}
rm(v1_reordered)
rm(v2_reordered)
rm(v3_reordered)
rm(v4_reordered)
rm(v5_reordered)
rm(set_map)
```

## Resolving Duplicate Variables

### Treatment Quality and Satisfaction Survey

The original coding of the Treatment Quality and Satisfaction Survey created separate variables for the same questions when presented to members of each study group (i.e., "tq_1_1", "tq_1_2", and "tq_1_3" present the same question to members of group 1, group 2, and group 3 respectively). For analysis, we need to combine these variables into a single variable. We also see that there are 18 unique questions.

```{r}
survey_vars <- pull(variable_map %>%
  filter(instrument == "Treatment Quality and Satisfaction Survey") %>%
  select(variable))

survey_vars
```

We checked our miss pattern in detail, and found that there were no occurrences of a single visit having a data value for more than one version of the same question.

```{r}
answer_pattern <- tibble::tibble(!!!c('item', 'group', 'total_ans'), .rows = 0,
                                 .name_repair = ~c('item', 'group', 'total_ans'))

inst_prefix <- "tq_"

num_vars <- 18

for (step_num in 1:num_vars) {

  item_prefix <- paste(inst_prefix, step_num, "_", sep = "")
  
  item_vars <- qds_all_visits %>%
    select(all_of(starts_with(item_prefix))) %>%
    names()
  
  temp_set <- qds_all_visits %>%
    select(subject, group, visit, all_of(item_vars)
           ) %>%
    select(-c(subject,visit)) %>%
    mutate(total_ans = rowSums(!is.na(across(all_of(item_vars)))),
           item = item_prefix
           ) %>%
    select(item, group, total_ans) %>%
    distinct() %>%
    arrange(group)
  
  answer_pattern <- rbind(answer_pattern, temp_set)
  
  rm(item_vars)
  rm(item_prefix)
  rm(temp_set)

}

answer_pattern %>%
  filter(total_ans > 1)
```

We identified the 18 variables we wished to combine all duplicated questions into - the first occurrence of each question. Questions 1-14 are numeric, and questions 15-18 are text-based.

```{r}
survey_vars[1:18]

qds_all_visits %>%
  select(all_of(survey_vars)) %>%
  mutate(across(everything(), typeof)) %>%
  distinct()
```

We consolidated these variables in our combined data set. We also added a column to our variable map, indicating if a variable was dropped due to consolidation.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
    tq_1_1 = rowSums(select(., all_of(starts_with("tq_1_"))), na.rm = TRUE),
    tq_2_1 = rowSums(select(., all_of(starts_with("tq_2_"))), na.rm = TRUE),
    tq_3_2  = rowSums(select(., all_of(starts_with("tq_3_"))), na.rm = TRUE),
    tq_4_2 = rowSums(select(., all_of(starts_with("tq_4_"))), na.rm = TRUE),
    tq_5_3 = rowSums(select(., all_of(starts_with("tq_5_"))), na.rm = TRUE),
    tq_6_3 = rowSums(select(., all_of(starts_with("tq_6_"))), na.rm = TRUE),
    tq_7_3 = rowSums(select(., all_of(starts_with("tq_7_"))), na.rm = TRUE),
    tq_8_3 = rowSums(select(., all_of(starts_with("tq_8_"))), na.rm = TRUE),
    tq_9_2 = rowSums(select(., all_of(starts_with("tq_9_"))), na.rm = TRUE),
    tq_10_2 = rowSums(select(., all_of(starts_with("tq_10_"))), na.rm = TRUE),
    tq_11_2 = rowSums(select(., all_of(starts_with("tq_11_"))), na.rm = TRUE),
    tq_12_2 = rowSums(select(., all_of(starts_with("tq_12_"))), na.rm = TRUE),
    tq_13_2 = rowSums(select(., all_of(starts_with("tq_13_"))), na.rm = TRUE),
    tq_14_1 = rowSums(select(., all_of(starts_with("tq_14_"))), na.rm = TRUE)
    ) %>%
  unite(tq_15_3, all_of(starts_with("tq_15_")), remove = FALSE, na.rm = TRUE) %>%
  unite(tq_16_3, all_of(starts_with("tq_16_")), remove = FALSE, na.rm = TRUE) %>%
  unite(tq_17_3, all_of(starts_with("tq_17_")), remove = FALSE, na.rm = TRUE) %>%
  unite(tq_18_3, all_of(starts_with("tq_18_")), remove = FALSE, na.rm = TRUE) %>%
  mutate(tq_15_3 = na_if(tq_15_3, ""),
         tq_16_3 = na_if(tq_16_3, ""),
         tq_17_3 = na_if(tq_16_3, ""),
         tq_18_3 = na_if(tq_16_3, "")
         ) %>%
select(-survey_vars[19:length(survey_vars)])

variable_map <- variable_map %>%
  add_column(drop_consolidated = FALSE) %>%
  mutate(drop_consolidated = ifelse(
        variable %in% survey_vars[19:length(survey_vars)], 
        TRUE, 
        drop_consolidated)
      )
```

We purged containers that were no longer needed.

```{r}
rm(answer_pattern)
rm(step_num)
rm(num_vars)
rm(survey_vars)
rm(inst_prefix)
```

# Creating calculated variables

There were 381 variables dropped from the source data sets, with several of these variables appearing in more than one data set. The vast majority of these variables were calculated in SPSS, and we chose to recreate the calculations in R.

```{r}
drop_vars <- c(drop_v1, drop_v2, drop_v3, drop_v4, drop_v5)

length(drop_vars)
```

We added a column to our variable map to indicate if a variable was calculated.

```{r}
variable_map <- variable_map %>%
  add_column(calculated = FALSE)
```

## Administrative Section

We found 9 dropped calculated variables that referenced the administrative variables. We isolated these variables from Visit 1 to assess for labels and other attributes. `SUBJECT1`, `II_V1` and the `TEST_V` variables were previously found to be empty or superfluous values, and remained dropped.

```{r}
drop_vars[str_detect(drop_vars, "(Time_to)|(SUBJECT)|(TEST)|(II)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("Time_to")), all_of(contains("SUBJECT")),
         all_of(contains("TEST"))
         )
```

We calculated the Time to Complete by subtracting the end time from the start time, and labeled the newly created variable.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(time_to_complete = endtime - ctime)

attr(qds_all_visits$time_to_complete, 
     'label') <- "Time to complete (finish time - start time)"
```

We added this new variable to our variable map.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = 'time_to_complete',
  'section' = 'Administrative',
  'sec_ord' = 1,
  'instrument' = 'Administrative',
  'inst_ord' = 1,
  'item_ord' = 10,
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

variable_map <- rbind(variable_map, map_temp_tibble) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$section == "Administrative",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- drop_vars[str_detect(drop_vars, 
                                      "(Time_to)|(SUBJECT)|(TEST)|(II)")]

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Screening Section

### Mini-Mental State Exam

We found 6 dropped calculated variables that referenced the Mini-Mental State Exam measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(mms)|(MMS)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("mms")), all_of(contains("MMS"))
         )
```

We calculated the scoring for the Mini-Mental Status exam. There were two possible versions - if subjects were unable to count backwards from 100 by 7s, they were offered the ability to spell WORLD backwards. This resulted in two potential scoring systems (one using `count` when numerically tested, and one using `num` when tested using WORLD). We calculated both of these possible scores.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(num = ifelse(is.na(mms_4v) & !is.na(mms_4), 0, num)) %>%
  mutate(mms_s = (mms_1 + mms_2 + recal_1 + count + recal_2 + object + mms_7 +
           paper + mms_9 + mms_10 + mms_11),
    mms_s_alt = (mms_1 + mms_2 + recal_1 + num + recal_2 + object +
           mms_7 + paper + mms_9 + mms_10 + mms_11)
    )

attr(qds_all_visits$mms_s, 'label') <- 
  "MINI Mental State Exam Score when participant is able count backwards from 100 by 7s"

attr(qds_all_visits$mms_s_alt, 'label') <- 
  "MINI Mental State Exam Score when participant is unable to count backwards from 100 by 7s and are asked to spell WORLD backwards"
```

We determined which score should be dominant, based on if numeric or verbal testing was performed for item 4. We also created a variable which interpreted the results categorically.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(mms_total = case_when(
      !is.na(num) & (num != 0) ~ mms_s_alt,
      (count > 0) & (num == 0 | is.na(num)) ~ mms_s,
      TRUE ~ NA),
    mms_severity = case_when(
      mms_total >= 24 ~ 0,
      (mms_total >=18) & (mms_total <24) ~ 1,
      (mms_total < 18) ~ 2,
      TRUE ~ NA
    )
  )

attr(qds_all_visits$mms_total, 
     'label') <- "MINI Mental State Exam total score"

attr(qds_all_visits$mms_severity, 
     'label') <- "What is the likelihood of cognitive impairment?"
attr(qds_all_visits$mms_severity, 'labels') <- c(
                                        "No cognitive impairment" = 0, 
                                        'Mild congnitive impairment' = 1,
                                        'Severe cognitive impairment' = 2)
```


We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('mms_s_alt', 'mms_total', 'mms_severity'),
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Mini Mental State Exam',
  'inst_ord' = 2,
  'item_ord' = c(57, 58, 59),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "Mini Mental State Exam",]

inst_map <- rbind(inst_map, map_temp_tibble) 

variable_map <- variable_map[variable_map$instrument != "Mini Mental State Exam",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Mini Mental State Exam",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(mms)|(MMS)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Anthropometric Variables

We found 28 dropped calculated variables that referenced the anthropometric measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
                         "(height)|(weight)|(obese)|(bmi)|(BMI)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("height")), all_of(contains("weight")),
         all_of(contains("bmi")), all_of(contains("obese")))
```

Calculation of BMI requires height in meters squared and weight in kilograms. Height was originally collected in centimeters. We calculated this into meters and meters squared, and labeled these new variables.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(height_meters = height * 0.01,
         height_meters_sq = height_meters*height_meters)

attr(qds_all_visits$height_meters, 'label') <- "Height (meters)"
attr(qds_all_visits$height_meters_sq, 'label') <- "Height (meters squared)"
```

Weight was originally collected in pounds (lbs). We calculated this into kilograms, and labeled the new variable.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(weight_kg = weight * 0.453592)

attr(qds_all_visits$weight_kg, 'label') <- "Weight (kilograms)"
```

We calculated BMI, and labeled the variable.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(bmi = weight_kg / height_meters_sq)

attr(qds_all_visits$bmi, 'label') <- "BMI (kilograms/square meters)"
```

We recreated the categorization of subject weight by BMI, into "underweight", "normal", "overweight" and "obese. We also created binary flag variables indicating if a subject was or was not classified as obese, or was classified either obese or overweight.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(weight_status = case_when(
      !is.na(bmi) & bmi < 18.5 ~ 0,
      !is.na(bmi) & (bmi >=18.5) & (bmi < 25) ~ 1,
      !is.na(bmi) & (bmi >=25) & (bmi < 30) ~ 2,
      !is.na(bmi) & bmi >=30 ~ 3,
      is.na(bmi) ~ NA
      )
    )

attr(qds_all_visits$weight_status, 'label') <- "BMI categorization"

attr(qds_all_visits$weight_status, 'labels') <- c(
      "underweight" = 0, 
      "normal" = 1,
      "overweight" = 2,
      "obese" = 3
    )

qds_all_visits <- qds_all_visits %>%
    mutate(obese = case_when(
      is.na(weight_status) ~ NA,
      weight_status == 3 ~ TRUE,
      !is.na(weight_status) & (weight_status != 3) ~ FALSE
    )
  )

attr(qds_all_visits$obese, 'label') <- "Obese"
attr(qds_all_visits$obese, 'labels') <- c("obese" = TRUE, 
                                          'not obese' = FALSE)

qds_all_visits <- qds_all_visits %>%
    mutate(overweight_obese = case_when(
      is.na(weight_status) ~ NA,
      (weight_status == 2) | (weight_status == 3) ~ TRUE,
      !is.na(weight_status) | (weight_status < 2) ~ FALSE
    )
  )

attr(qds_all_visits$overweight_obese, 'label') <- "Overweight or Obese"
attr(qds_all_visits$overweight_obese, 'labels') <- c(
                                        "overweight or obese" = TRUE, 
                                        'neither overweight nor obese' = FALSE)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('weight_kg', 'height_meters', 'height_meters_sq', 'bmi', 
              'weight_status', 'obese', 'overweight_obese'),
  'section' = 'Screening',
  'sec_ord' = 2,
  'instrument' = 'Anthropometrics',
  'inst_ord' = 4,
  'item_ord' = c(2, 4, 5, 6, 7, 8, 9 ),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "Anthropometrics",] %>%
  mutate(item_ord = item_ord + 7) %>%
  mutate(item_ord = case_when(
    variable == "weight" ~ 1,
    variable == "height" ~ 3,
    TRUE ~ item_ord
  ))

inst_map <- rbind(inst_map, map_temp_tibble) 

variable_map <- variable_map[variable_map$instrument != "Anthropometrics",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Anthropometrics",]
```


We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, 
                         "(height)|(weight)|(obese)|(bmi)|(BMI)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Demographic Section

### Demographic Questionnaire

There was a single variable dropped from the SPSS calculations in the demographic questionnaire - `Any_health_insurance`

```{r}
checking_vars[str_detect(checking_vars, "(insurance)|(dem)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("insurance")))
```

We calculated if a subject had any form of health insurance by responses to the itemized dummy variables for question 7 - if the subject indicated any form of insurance, the value would be "TRUE", if no insurance was selected or a lack of insurance indicated, "FALSE". 

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(any_health_insurance = case_when(
      (dem_7a == 1) | (dem_7b == 1) | (dem_7c == 1) | (dem_7d == 1) ~ TRUE,
      (dem_7a == 0) | (dem_7b == 0) | (dem_7c == 0) | (dem_7d == 0) ~ FALSE,
      (dem_7e == 1) ~ FALSE,
      TRUE ~ NA
      )
    )

attr(qds_all_visits$any_health_insurance, 
     'label') <- "Does the participant have health insurance?"
attr(qds_all_visits$any_health_insurance, 'labels') <- c(
                                        "some form of insurance" = TRUE, 
                                        "no insurance" = FALSE)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('any_health_insurance'),
  'section' = 'Demographics',
  'sec_ord' = 3,
  'instrument' = 'Demographic Questionnaire',
  'inst_ord' = 1,
  'item_ord' = 22,
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "Demographic Questionnaire",] %>%
  mutate(item_ord = ifelse(item_ord >=22, item_ord + 1, item_ord))

inst_map <- rbind(inst_map, map_temp_tibble) 

variable_map <- variable_map[variable_map$instrument != 
                               "Demographic Questionnaire",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Demographic Questionnaire",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(insurance)|(dem)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### The Brief Homelessness Questionnaire

There was a single variable dropped from the SPSS calculations in The Brief Homelessness Questionnaire - `current_months_homeless`

```{r}
checking_vars[str_detect(checking_vars, "(home)|(HOME)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("homeless")))
```

This variable was a recode from Item 4 of the questionnaire, and thus the calculated variable would be a duplicate. It was not re-added.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(home)|(HOME)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Health Section

### PHQ

We found 48 dropped calculated variables that referenced the Patient Health Questionnaire measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(phq)|(PHQ)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("PHQ")))
```

We calculated the total for the PHQ Depression items (Questions 1-8).

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(phq_dep_total = (phq_1 + phq_2 + phq_3 + phq_4 + phq_5 + phq_6 + 
                            phq_7 + phq_8))

attr(qds_all_visits$phq_dep_total, 
     'label') <- "Sum of PHQ MDD questions"
```

We created dichotomous versions of each of the PHQ Depression items (Questions 1-8): a score of 0-1 ("not at all" or "several days") was coded as a 0, and any other answer as a 1. We calculated the total number of items where "More than half the days" or "Nearly every day" were selected. 

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(phq_1_dichot = case_when(
    (phq_1 == 0) | (phq_1 == 1) ~ 0,
    phq_1 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_2_dichot = case_when(
    (phq_2 == 0) | (phq_2 == 1) ~ 0,
    phq_2 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_3_dichot = case_when(
    (phq_3 == 0) | (phq_3 == 1) ~ 0,
    phq_3 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_3_dichot = case_when(
    (phq_3 == 0) | (phq_3 == 1) ~ 0,
    phq_3 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_4_dichot = case_when(
    (phq_4 == 0) | (phq_4 == 1) ~ 0,
    phq_4 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_5_dichot = case_when(
    (phq_5 == 0) | (phq_5 == 1) ~ 0,
    phq_5 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_6_dichot = case_when(
    (phq_6 == 0) | (phq_6 == 1) ~ 0,
    phq_6 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_7_dichot = case_when(
    (phq_7 == 0) | (phq_7 == 1) ~ 0,
    phq_7 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_8_dichot = case_when(
    (phq_8 == 0) | (phq_8 == 1) ~ 0,
    phq_8 > 1 ~ 1,
    TRUE ~ NA
    ),
    phq_dep_dichot_total = (phq_1_dichot + phq_2_dichot + phq_3_dichot +
                              phq_4_dichot + phq_5_dichot + phq_6_dichot + 
                              phq_7_dichot + phq_8_dichot)
  )

attr(qds_all_visits$phq_1_dichot, 
     'label') <- "Little interest or pleasure in doing things dichot"
attr(qds_all_visits$phq_2_dichot, 
     'label') <- "Feeling down, depressed, or hopeless dichot"
attr(qds_all_visits$phq_3_dichot, 
     'label') <- "Trouble falling or staying asleep, or sleeping too much dichot"
attr(qds_all_visits$phq_4_dichot, 
     'label') <- "Feeling tired or having little energy dichot"
attr(qds_all_visits$phq_5_dichot, 
     'label') <- "Poor appetite or overeating dichot"
attr(qds_all_visits$phq_6_dichot, 
     'label') <- "Failure or have let yourself or your family down dichot"
attr(qds_all_visits$phq_7_dichot, 
     'label') <- "Reading the newspaper or watching television dichot"
attr(qds_all_visits$phq_8_dichot, 
     'label') <- "Fidgety or restless dichot"

for (i in c(1:8)){
  attr(qds_all_visits[[paste0("phq_",i,"_dichot")]], 'labels') <- c(
                            "Not at all and several days" = 0, 
                            "More than half the days and nearly every day" = 1)
  
}

attr(qds_all_visits$phq_dep_dichot_total, 
     'label') <- "PHQ depression dichotomized total"

```

We determined the categorical score of probable MDD.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(phq_dep_symp = case_when(
             ((phq_1_dichot == 1) | (phq_2_dichot == 1)) ~ 1,
             ((phq_1_dichot == 0) & (phq_2_dichot == 0)) ~ 0,
           TRUE ~ NA
           ),
         phq_mdd = case_when(
           ((phq_dep_symp == 1) | (phq_dep_dichot_total > 4)) ~ 1,
           phq_dep_symp == 0 ~ 0,
           phq_dep_dichot_total < 5 ~ 0,
           TRUE ~ 0
           )
         ) 


attr(qds_all_visits$phq_dep_symp, 
     'label') <- "Does PHQ1 or PHQ2 have more than half the days and nearly every day selected?"
attr(qds_all_visits$phq_mdd, 
     'label') <- "Is there probable major depressive disorder?"

for (i in c('phq_dep_symp', 'phq_mdd')){
  attr(qds_all_visits[[i]], 'labels') <- c(
                            "No" = 0, 
                            "Yes" = 1)
}

```

We calculated the total for the PHQ GAD items (Questions 9-15).

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(phq_gad_total = (phq_9 + phq_10 + phq_11 + phq_12 + phq_13 + 
                            phq_14 + phq_15))

attr(qds_all_visits$phq_gad_total, 
     'label') <- "Sum of PHQ GAD questions"
```


We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
new_vars <- c('phq_dep_total')

for (i in c(1:8)){
  new_vars <- c(new_vars, paste0("phq_",i,"_dichot"))
}

new_vars <- c(new_vars, 'phq_dep_dichot_total', 'phq_dep_symp', 'phq_mdd',
              'phq_gad_total')

map_temp_tibble <- tibble::tibble(
  'variable' = new_vars,
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Patient Health Questionnaire',
  'inst_ord' = 1,
  'item_ord' = c(17, 2, 4, 6, 8, 10, 12, 14, 16, 18, 19, 20, 28),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Patient Health Questionnaire",] %>%
    mutate(item_ord = case_when(
      (item_ord < 9) ~ (item_ord * 2) - 1,
      (item_ord >= 9) ~ (item_ord + 12)
      )
    ) 

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Patient Health Questionnaire",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Patient Health Questionnaire",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(phq)|(PHQ)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### SF 12 Health Survey

We found 4 dropped calculated variables that referenced the SF 12 Health Survey measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^hs)|(^HS)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("hs")))
```

We dichotomized the outcomes for the first question of the instrument.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(hs_1_dichot = case_when(
      hs_1 <= 3 ~ 0,
      hs_1 > 3 ~ 1,
      TRUE ~ NA
    )
  )

attr(qds_all_visits$hs_1_dichot, 'label') <- "Self-Rated health dichot"
attr(qds_all_visits$hs_1_dichot, 'labels') <- c(
                                            "excelent to good health" = 0, 
                                            "fair or poor health" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('hs_1_dichot'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'SF 12 Health Survey',
  'inst_ord' = 2,
  'item_ord' = c(2),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "SF 12 Health Survey",] %>%
  mutate(item_ord = ifelse (item_ord > 1, item_ord + 1, item_ord))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument !=  "SF 12 Health Survey",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "SF 12 Health Survey",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^hs)|(^HS)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Self-Rated Health

We found 4 dropped calculated variables that referenced the Self-Rated Health measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars,
             "((Mental_)|(mental_)|(pain)|(PAIN)|(Substance_)|(substance_))")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("pain")), all_of(starts_with("s_")), 
         all_of(contains("substance_")), all_of(contains("mental")))
```

We dichotomized our items for mental health history, substance abuse history, and pain.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
    s_mental_hx = case_when(
      ((s_19 == 1) | (s_20 == 1) | (s_21 == 1) | (s_22 == 1) | (s_23 == 1)) ~ 1,
      ((s_19 == 0) & (s_20 == 0) & (s_21 == 0) & (s_22 == 0) & (s_23 == 0)) ~ 0,
      TRUE ~ NA
     ),
    s_30_dichot = case_when(
      ((s_30a == 1) | (s_30b == 1) | (s_30c == 1) | (s_30d == 1) | 
        (s_30e == 1) | (s_30f == 1) | (s_30g == 1)) ~ 1,
      ((s_30a == 0) & (s_30b == 0) & (s_30c == 0) & (s_30d == 0) | 
        (s_30e == 0) & (s_30f == 0) & (s_30g == 0)) ~ 0,
      s_29 == 0 ~ 0,
      TRUE ~ NA
    ),
    s_32_dichot = case_when(
      ((s_32b == 1) | (s_32c == 1) | (s_32d == 1) | (s_32e == 1) | 
        (s_32f == 1) | (s_32g == 1) | (s_32h == 1)) ~ 1,
      ((s_32b == 0) & (s_32c == 0) & (s_32d == 0) & (s_32e == 0) & 
        (s_32f == 0) & (s_32g == 0) & (s_32h == 0)) ~ 0,
      TRUE ~ NA
    ),
    s_40_dichot = case_when(
        s_40 > 2 ~ 1,
        s_40 <=2 ~ 0,
        TRUE ~ NA
      )
  )

attr(qds_all_visits$s_mental_hx, 'label') <- 
  "If history of depression, anxiety, ptsd, bipolar, or schizo present"
attr(qds_all_visits$s_mental_hx, 
     'labels') <- c("has no history of mental illnes" = 0,
                    "has a history of at least one mental illness" = 1)
attr(qds_all_visits$s_30_dichot, 'label') <- 
  "If history of alcohol, cannabis, cocaine, opiate, amphetamine, sedative, hypnotic, anxiolytic or other abuse present"
attr(qds_all_visits$s_30_dichot, 
     'labels') <- c("has no history of substance abuse" = 0,
                    "has a history of at least one substance abuse disorder" = 1)
attr(qds_all_visits$s_32_dichot, 'label') <- 
  "If used cannabis, cocaine, opiate, amphetamine, sedative, hypnotic, anxiolytic, K2, or other substance"
attr(qds_all_visits$s_32_dichot, 
     'labels') <- c("has not used cannabis, cocaine, opiate, amphetamine, sedative, hypnotic, anxiolytic, K2, or other substance " = 0,
                    "has used cannabis, cocaine, opiate, amphetamine, sedative, hypnotic, anxiolytic, K2, or other substance " = 1)
attr(qds_all_visits$s_40_dichot, 'label') <- 
  "Pain level in last 4 weeks categorized into none-mild and mod-severe"
attr(qds_all_visits$s_40_dichot, 
     'labels') <- c("none to mild pain" = 0,
                    "moderate or severe pain" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('s_mental_hx', 's_30_dichot', 's_32_dichot', 's_40_dichot'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Self-Rated Health',
  'inst_ord' = 4,
  'item_ord' = c(93, 157, 169, 179),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "Self-Rated Health",] %>%
  mutate(item_ord = case_when(
    item_ord < 93 ~ item_ord,
    item_ord >= 176 ~ item_ord + 4,
    (item_ord >= 167) & (item_ord < 176) ~ item_ord + 3,
    (item_ord >= 156) & (item_ord < 167) ~ item_ord + 2,
    (item_ord >= 93) & (item_ord < 156) ~ item_ord + 1
  ))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument !=  "Self-Rated Health",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Self-Rated Health",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars,
             "((Mental_)|(mental_)|(pain)|(PAIN)|(Substance_)|(substance_))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### TCU Drug Screen 5

We found 8 dropped calculated variables that referenced the TCU Drug Screen 5 measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "((DS)|(ds))")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(contains("ds")))
```

We calculated the total of the items, and categorized the result.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(ds_10_val = case_when(
          ((ds_10a == 1) | (ds_10b == 1)) ~ 1,
          ((ds_10a == 0) & (ds_10b == 0)) ~ 0,
          TRUE ~ NA
        ),
        ds_11_val = case_when(
          ((ds_11a == 1) | (ds_11b == 1)) ~ 1,
          ((ds_11a == 0) & (ds_11b == 0)) ~ 0,
          TRUE ~ NA
        ),
        ds_total = ((ds_1 + ds_2 + ds_3 + ds_4 + ds_5 + ds_6 + ds_7 + ds_8 +
                       ds_9 + ds_10_val + ds_11_val)),
        ds_cat = case_when(
          (ds_total <= 1) ~ 0,
          ((ds_total >= 2) & (ds_total <= 3)) ~ 1,
          ((ds_total >=4) & (ds_total <= 5)) ~ 2,
          (ds_total >5) ~ 3,
          TRUE ~ NA
        )
      )

attr(qds_all_visits$ds_10_val, 
     'label') <- "Combined 10A & 10B, tolerance"
attr(qds_all_visits$ds_11_val, 
     'label') <- "Combined 11A & 11B, withdrawal"
attr(qds_all_visits$ds_total, 
     'label') <- "Total TCU Drug Screen 5 Score"
attr(qds_all_visits$ds_cat, 
     'label') <- "Total TCU Drug Screen 5 Score Category"
attr(qds_all_visits$ds_10_val, 
     'labels') <- c("No to both" = 0, 
                    "Yes to either" = 1)
attr(qds_all_visits$ds_11_val, 
     'labels') <- c("No to both" = 0, 
                    "Yes to either" = 1)
attr(qds_all_visits$ds_cat, 
     'labels') <- c("Score <= 1" = 0, 
                    "Mild disorder" = 1,
                    "Moderate disorder" = 2,
                    "Severe disorder" = 3)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('ds_10_val', 'ds_11_val', 'ds_total', 'ds_cat'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'TCU Drug Screen 5',
  'inst_ord' = 5,
  'item_ord' = c(12, 15, 16, 17),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "TCU Drug Screen 5",] %>%
  mutate(item_ord = case_when(
    (item_ord <= 11) ~ item_ord,
    ((item_ord > 11)) ~ item_ord + 1
  ))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "TCU Drug Screen 5",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "TCU Drug Screen 5",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "((DS)|(ds))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Primary Care PTSD Screen (PC-PTSD)

We found 2 dropped calculated variables that referenced the Primary Care PTSD Screen (PC-PTSD) measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(ptsd)|(PTSD)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("PTSD")))
```

We calculated the total of the items, and categorized the result.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(ptsd_total = (ptsd_1 + ptsd_2 + ptsd_3 + ptsd_4),
         ptsd_positive = case_when(
           ptsd_total >= 3 ~ 1,
           ptsd_total < 3 ~ 0,
           TRUE ~ NA
           )
         )

attr(qds_all_visits$ptsd_total, 
     'label') <- "Sum of PC-PTSD"
attr(qds_all_visits$ptsd_positive, 
     'label') <- "Probable PTSD"
attr(qds_all_visits$ptsd_positive, 
     'labels') <- c("No PTSD" = 0, 
                    "Probable PTSD" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('ptsd_total', 'ptsd_positive'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Primary Care PTSD Screen (PC-PTSD)',
  'inst_ord' = 6,
  'item_ord' = c(5,6),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Primary Care PTSD Screen (PC-PTSD)",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Primary Care PTSD Screen (PC-PTSD)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Primary Care PTSD Screen (PC-PTSD)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(ptsd)|(PTSD)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Tobacco History

We found 8 dropped calculated variables that referenced the Tobacco History. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "((^t[0-9])|(^T[0-9])|(smoke))")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("t")), all_of(contains("smoke")))
```

We calculated the values of Questions 5 and 6. We also calculated the ratio of friends that smoke, and created a dichotomous if a spouse smokes.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(t_5_val = case_when(
    (t_5 == 0) ~ 0,
    (t_5 == 1) ~ t_5a1,
    (t_5 == 2) ~ t_5a2,
    (t_5 == 3) ~ t_5a3,
    (t_5 == 4) ~ t_5a4,
    (t_5 == 5) ~ t_5a5,
    (t_5 == 6) ~ t_5a6,
    TRUE ~ NA
  ),
  t_6_val = case_when(
    (t_6 == 0) ~ 0,
    (t_6 == 1) ~ t_6a1,
    (t_6 == 2) ~ t_6a2,
    (t_6 == 3) ~ t_6a3,
    (t_6 == 4) ~ t_6a4,
    (t_6 == 5) ~ t_6a5,
    (t_6 == 6) ~ t_6a6,
    TRUE ~ NA
  ),
  t_spouse = case_when(
    ((t_34 == 1) & (t_35 == 1)) ~ 1,
    ((t_34 == 1) & (t_35) == 1) ~ 0,
    TRUE ~ NA
  ),
  t_friends = case_when(
    (t_38 > 0) ~ (t_39 / t_38),
    TRUE ~ NA
  )
         )

attr(qds_all_visits$t_5_val, 
     'label') <- "Exact number of cigarettes smoked in the last 24 hours"
attr(qds_all_visits$t_6_val, 
     'label') <- "Exact number of cigarettes usually smoked in a day"
attr(qds_all_visits$t_spouse, 
     'label') <- "if a participant has a spouse that smokes"
attr(qds_all_visits$t_spouse, 
     'labels') <- c("participant does not have spouse who smokes" = 0, 
                    "participant does have spouse who smokes" = 1)
attr(qds_all_visits$t_friends, 
     'label') <- "Ratio of close friends who smoke"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('t_5_val', 't_6_val', 't_spouse', 't_friends'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Tobacco History',
  'inst_ord' = 8,
  'item_ord' = c(15, 23, 102, 107),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument ==  "Tobacco History",] %>%
  mutate(item_ord = case_when(
    item_ord < 15 ~ item_ord,
    item_ord >= 104 ~ item_ord + 4,
    (item_ord < 104) & (item_ord >= 100) ~ item_ord + 3,
    (item_ord >= 22) & (item_ord < 100) ~ item_ord + 2,
    (item_ord < 22) & (item_ord >= 15) ~ item_ord + 1
  ))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != "Tobacco History",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Tobacco History",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars,
                                  "((^t[0-9])|(^T[0-9])|(smoke))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```


### Heaviness of Smoking Index (HSI)

We found 8 dropped calculated variables that referenced the Heaviness of Smoking Index (HSI) measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(hsi)|(HSI)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("hsi")))
```

We calculated the total of the items, and categorized the result.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(hsi_score = (hsi_1 + hsi_2),
         hsi_cat = case_when(
           hsi_score < 3 ~ 0,
           hsi_score == 3 ~ 1,
           hsi_score == 4 ~ 2,
           hsi_score > 4 ~ 3,
           TRUE ~ NA
           )
         )

attr(qds_all_visits$hsi_score, 
     'label') <- "HSI score"
attr(qds_all_visits$hsi_cat, 
     'label') <- "HSI score recoded into categories"
attr(qds_all_visits$hsi_cat, 
     'labels') <- c("very low dependence" = 0, 
                    "low to moderate dependence" = 1,
                    "moderate dependence" = 2,
                    "high dependence" = 3)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('hsi_score', 'hsi_cat'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Heaviness of Smoking Index (HSI)',
  'inst_ord' = 9,
  'item_ord' = c(3,4),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Heaviness of Smoking Index (HSI)",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Heaviness of Smoking Index (HSI)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Heaviness of Smoking Index (HSI)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(hsi)|(HSI)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### BRFSS Inadequate Sleep

We found 8 dropped calculated variables that referenced the BRFSS Inadequate Sleep measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
                         "((brs)|(BRS)|(bris)|(BRIS)|(qd)|(QD)|(unintent_slp))")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(contains("brs")), all_of(contains("qd")), 
         all_of(contains("bris")), all_of(contains("unintent_slp")))
```

We dichotomized the results for question 2 and question 4, and labeled the categories.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(brs_2_dichot = case_when(
          brs_2 >= 7 ~ 0,
          brs_2 < 7 ~ 1,
          TRUE ~ NA
        ),
        brs_4_dichot = case_when(
          brs_4 == 0 ~ 0,
          brs_4 > 0 ~ 1,
          TRUE ~ NA
        )
      )

attr(qds_all_visits$brs_2_dichot, 'label') <- "Average Hours of Sleep dichot"
attr(qds_all_visits$brs_4_dichot, 'label') <- "Unintentional sleep dichot"
attr(qds_all_visits$brs_2_dichot, 
     'labels') <- c("7 hours or more" = 0, 
                    "less than 7 hours" = 1)
attr(qds_all_visits$brs_4_dichot, 
     'labels') <- c("No unintentional sleeping" = 0, 
                    "at least one day of unintentional sleeping" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('brs_2_dichot', 'brs_4_dichot'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'BRFSS Inadequate Sleep',
  'inst_ord' = 10,
  'item_ord' = c(3,6),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == "BRFSS Inadequate Sleep",] %>%
  mutate(item_ord = case_when(
    (item_ord > 2) & (item_ord < 5) ~ item_ord + 1,
    (item_ord > 4) ~ item_ord + 2,
    TRUE ~ item_ord
  ))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "BRFSS Inadequate Sleep",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "BRFSS Inadequate Sleep",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars, 
                       "((brs)|(BRS)|(bris)|(BRIS)|(qd)|(QD)|(unintent_slp))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Alcohol Quantity and Frequency Questionnaire

We found 12 dropped calculated variables that referenced the Alcohol Quantity and Frequency Questionnaire measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
                         "(((^Alc)|(^ALC)|(^alc))|((drink)|(DRINK)))")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("af")), all_of(starts_with("alc")),
         all_of(contains("drink")))
```

We calculated the total for item 1. We also calculated if each subject was or was not a heavy drinker, number of days binge drinking, and a binary category indicating if a subject engaged in binge drinking in the past 30 days.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
      af_1_val = case_when(
        af_1 == 0 ~ 0,
        af_1 > 0 ~ (af_2m + af_3tu + af_4w + af_5th + af_6f + af_7sa + af_8su),
        TRUE ~ NA
      ),
      af_1_heavy = case_when(
        ((gender == 0) & (af_1_val <= 14)) ~ 0,
        ((gender == 0) & (af_1_val > 14)) ~ 1,
        ((gender == 1) & (af_1_val <= 7)) ~ 0,
        ((gender == 1) & (af_1_val > 7)) ~ 1,
        TRUE ~ NA
      ),
      af_9_val = case_when(
        (af_9 == 0) ~ af_9a,
        (af_9 == 1) ~ af_9b,
        (af_9 == 2) ~ af_9c,
        TRUE ~ NA
      ),
      af_9_binge = case_when(
        af_9_val >= 1 ~ 1,
        af_9_val == 0 ~ 0,
        TRUE ~ NA
      )
    )

attr(qds_all_visits$af_1_val, 'label') <- "Total drinks in an average week"
attr(qds_all_visits$af_1_heavy, 
     'label') <- "Heavy drinking (men > 14 drinks per week, women > 7 drinks per week)"
attr(qds_all_visits$af_9_val, 
     'label') <- "How often in the past 30 days have you consumed (4 if female; 5 if male) or more STANDARD DRINKS?"
attr(qds_all_visits$af_9_binge, 'label') <- "Binge drinking in the past 30 days"


attr(qds_all_visits$af_1_heavy, 'labels') <- c("not a heavy drinker" = 0, 
                                                "heavy drinker" = 1)
attr(qds_all_visits$af_9_binge, 
     'labels') <- c("no binge drinking in the past 30 days" = 0,
                    "binge drinking in the past 30 days" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('af_1_val', 'af_1_heavy', 'af_9_val', 'af_9_binge'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Alcohol Quantity and Frequency Questionnaire',
  'inst_ord' = 11,
  'item_ord' = c(3, 4, 13, 14),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Alcohol Quantity and Frequency Questionnaire",] %>%
  mutate(item_ord = case_when(
    item_ord < 3 ~ item_ord,
    item_ord > 10 ~ item_ord + 4,
    (item_ord <= 10) & (item_ord > 2) ~ item_ord + 2
  ))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Alcohol Quantity and Frequency Questionnaire",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Alcohol Quantity and Frequency Questionnaire",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars, 
                         "(((^Alc)|(^ALC)|(^alc))|((drink)|(DRINK)))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Personality Beliefs Questionnaire

We found 1 dropped calculated variable that referenced the Personality Beliefs Questionnaire measures. We isolated that variable from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
                         "((pbq)|(PBQ))")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("pbq")))
```

We calculated the total for the instrument

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
      pbq_total = (pbq_1 + pbq_2 + pbq_3 + pbq_4 + pbq_5 + pbq_6 + pbq_7)
    )

attr(qds_all_visits$pbq_total, 
     'label') <- "Personality Beliefs Questionaire Antisocial Subscale total"

```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('pbq_total'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'Personality Beliefs Questionnaire',
  'inst_ord' = 13,
  'item_ord' = c(8),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Personality Beliefs Questionnaire",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Personality Beliefs Questionnaire",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Personality Beliefs Questionnaire",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars, 
                         "((PBQ)|(pbq))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### USDA Food Security Survey

We found 37 dropped calculated variables that referenced the USDA Food Security Survey measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars,  "((^FSS)|(^fss))")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("fss")))
```

We calculated scoring for each item, the total scale, and the category interpretations of the scores for this instrument.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
      fss_1_dichot = case_when(
        ((fss_1 == 0) | (fss_1 == 1)) ~ 1,
        ((fss_1 == 2) | (fss_1 == 99)) ~ 0,
        TRUE ~ NA
      ),
      fss_2_dichot = case_when(
        ((fss_2 == 0) | (fss_2 == 1)) ~ 1,
        ((fss_2 == 2) | (fss_2 == 99)) ~ 0,
        TRUE ~ NA
      ),
      fss_3_dichot = case_when(
        (fss_3 == 1) ~ 1,
        ((fss_3 == 0) | (fss_3 == 9)) ~ 0,
        TRUE ~ NA
      ),
      fss_3a_dichot = case_when(
        ((fss_3a == 0) | (fss_3a == 1)) ~ 1,
        ((fss_3a == 1) | (fss_3a == 9) | (fss_3 == 0)) ~ 0,
        TRUE ~ NA
      ),
      fss_4_dichot = case_when(
        (fss_4 == 1) ~ 1,
        ((fss_4 == 0) | (fss_4 == 9)) ~ 0,
        TRUE ~ NA
      ),
     fss_5_dichot = case_when(
        (fss_5 == 1) ~ 1,
        ((fss_5 == 0) | (fss_5 == 9)) ~ 0,
        TRUE ~ NA
      ),
     fss_total = (fss_1_dichot + fss_2_dichot + fss_3_dichot + fss_3a_dichot +
                    fss_4_dichot + fss_5_dichot),
     fss_cat = case_when(
       (fss_total <= 1) ~ 1,
       ((fss_total < 5) & (fss_total > 1)) ~ 2,
       (fss_total >=5) ~ 3,
       TRUE ~ NA
     ),
     fss_cat_dichot = case_when(
       fss_total <= 1 ~ 1,
       fss_total > 1 ~ 2,
       TRUE ~ NA
     )
    )

attr(qds_all_visits$fss_1_dichot, 
     'label') <- "food didn't last dichot"
attr(qds_all_visits$fss_2_dichot, 
     'label') <- "unable to afford balanced meals dichot"
attr(qds_all_visits$fss_3_dichot, 
     'label') <- "cut/skip meal due to cost dichot"
attr(qds_all_visits$fss_3a_dichot, 
     'label') <- "frequency of cutting/skipping meals dichot"
attr(qds_all_visits$fss_4_dichot, 
     'label') <- "ate less than felt one should due to cost dichot"
attr(qds_all_visits$fss_5_dichot, 
     'label') <- "hungry but didn't eat due to cost dichot"
attr(qds_all_visits$fss_total, 
     'label') <- "Total USDA Food Security Survey score"
attr(qds_all_visits$fss_cat, 
     'label') <- "Food security status"
attr(qds_all_visits$fss_cat_dichot, 
     'label') <- "Food security status dichot"

for (i in c(1:5)) {
  attr(qds_all_visits[[paste0("fss_", i, "_dichot")]], 
       "labels") <- c("no" = 0, "affirmative yes" = 1)
  
}

attr(qds_all_visits$fss_3a_dichot, 'labels') <- 
  c("1 to 2 days per month or less" = 0, "some days to every day" = 1)

attr(qds_all_visits$fss_cat, 'labels') <- c("High or marginal food security" = 1, 
                                            "Low food security" = 2,
                                            "Very low food security" = 3)
attr(qds_all_visits$fss_cat_dichot, 'labels') <- c("food secure" = 1, 
                                                   "food insecure" = 2)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('fss_1_dichot', 'fss_2_dichot', 'fss_3_dichot', 'fss_3a_dichot',
                 'fss_4_dichot', 'fss_5_dichot', 'fss_total', 'fss_cat', 
                 'fss_cat_dichot'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'USDA Food Security Survey',
  'inst_ord' = 14,
  'item_ord' = c(2, 4, 6, 8, 10, 12, 13, 14, 15),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
                           "USDA Food Security Survey",] %>%
  mutate(item_ord = (item_ord *2) -1
  )

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "USDA Food Security Survey",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "USDA Food Security Survey",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars,  
                                                           "((^FSS)|(^fss))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### TCU CJ Client Evaluation of Self and Treatment (CJ CEST)

We found 16 dropped calculated variables that referenced the TCU CJ Client Evaluation of Self and Treatment (CJ CEST) measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
         "((CJ)|(cj)|(TCU_[^Dd])|(tcu_[^Dd])|(TCU_[Dd][Ee])|(tcu_[Dd][Ee]))")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(contains("cj")), all_of(starts_with("TCU_de")),
         all_of(starts_with("TCU_t")), all_of(starts_with("TCU_h")),
         all_of(starts_with("TCU_te")))
```

We calculated the subscores, with care taken for reverse scoring of Questions 21-25 and 34-36.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(cj_desire = ifelse(cj_1 == 0, 
                            ((cj_2 + cj_3 + cj_4 + cj_5 + cj_6 + cj_7)*10/6),
                            NA
                            ),
        cj_needs = ((cj_8 + cj_9 + cj_10 + cj_11 + cj_12)*10/5),
        cj_satisfaction = ((cj_13 + cj_14 + cj_15 + cj_16 + cj_17 + cj_18 + 
                       cj_19) *10/7),
        cj_selfesteem = ((cj_20 + (6 - cj_21) + (6 - cj_22) + (6 - cj_23) +
                            (6 - cj_24) + (6 - cj_25))*10/6),
        cj_hostility = ((cj_26 + cj_27 + cj_28 + cj_29 + cj_30 + cj_31 + cj_32 
                         + cj_33)*10/8),
        cj_risktaking = (((6 - cj_34) + (6 - cj_35) + (6 - cj_36) + cj_37 +
                             cj_38 + cj_39 + cj_40)*10/7)
      )

attr(qds_all_visits$cj_desire, 
     'label') <- "TCU CJ desire for help subscale score"
attr(qds_all_visits$cj_needs, 
     'label') <- "TCU CJ treatment needs subscale score"
attr(qds_all_visits$cj_satisfaction, 
     'label') <- "TCU CJ treatment satisfaction subscale score"
attr(qds_all_visits$cj_selfesteem, 
     'label') <- "TCU CJ self-esteem subscale score"
attr(qds_all_visits$cj_hostility, 
     'label') <- "TCU CJ hostility subscale score"
attr(qds_all_visits$cj_risktaking, 
     'label') <- "TCU CJ risk taking subscale score"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('cj_desire', 'cj_needs', 'cj_satisfaction', 'cj_selfesteem',
                 'cj_hostility', 'cj_risktaking'),
  'section' = 'Health',
  'sec_ord' = 4,
  'instrument' = 'TCU CJ Client Evaluation of Self and Treatment (CJ CEST)',
  'inst_ord' = 16,
  'item_ord' = c(41, 42, 43, 44, 45, 46),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "TCU CJ Client Evaluation of Self and Treatment (CJ CEST)",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
             "TCU CJ Client Evaluation of Self and Treatment (CJ CEST)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "TCU CJ Client Evaluation of Self and Treatment (CJ CEST)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars, 
         "((CJ)|(cj)|(TCU_[^Dd])|(tcu_[^Dd])|(TCU_[Dd][Ee])|(tcu_[Dd][Ee]))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Stress

### Detroit Area Study Assessment of Day-to-Day Discrimination

We found 4 dropped calculated variables that referenced the Detroit Area Study Assessment of Day-to-Day Discrimination measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^dd)|(^DD)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("dd")))
```

We calculated the total score for the instrument.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(dd_total = (dd_1 + dd_2 + dd_3 + dd_4 + dd_5 + dd_6 + dd_7 + 
                       dd_8 + dd_9)
         )

attr(qds_all_visits$dd_total, 'label') <- "DD total"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('dd_total'),
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Detroit Area Study Assessment of Day-to-Day Discrimination',
  'inst_ord' = 1,
  'item_ord' = c(11),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Detroit Area Study Assessment of Day-to-Day Discrimination",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
           "Detroit Area Study Assessment of Day-to-Day Discrimination",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Detroit Area Study Assessment of Day-to-Day Discrimination",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^dd)|(^DD)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### MacArthur Major Discrimination

We found 1 dropped calculated variable that referenced the MacArthur Major Discrimination measures. We isolated this variable from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^mmd)|(^MMD)")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("mmd")))
```

We calculated the total score for the instrument.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(mmd_total = (mmd_1a + mmd_1b + mmd_1c + mmd_1d + mmd_1f + mmd_1g +
                        mmd_1h + mmd_1i + mmd_1j + mmd_1k)
         )

attr(qds_all_visits$mmd_total, 'label') <- "MacArthur Major Discrimination total"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('mmd_total'),
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'MacArthur Major Discrimination',
  'inst_ord' = 2,
  'item_ord' = c(12),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "MacArthur Major Discrimination",] %>%
  mutate(item_ord = ifelse((item_ord >= 12), item_ord + 1, item_ord))

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
           "MacArthur Major Discrimination",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "MacArthur Major Discrimination",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^mmd)|(^MMD)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Urban Life Stress Scale

We found 4 dropped calculated variables that referenced the Urban Life Stress Scale measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^uls)|(^ULS)")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("uls")))
```

We calculated the score for the item.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(uls_total = (uls_1 + uls_2 + uls_3 + uls_4 + uls_5 + uls_6 + uls_7 +
                        uls_8 + uls_9 + uls_10 + uls_11 + uls_12 + uls_13 + 
                        uls_14 + uls_15 + uls_16 + uls_17 + uls_18 + uls_19 +
                        uls_20 + uls_21)
         )

attr(qds_all_visits$uls_total, 'label') <- "Urban Life Stress Scale Total"

```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('uls_total'),
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Urban Life Stress Scale',
  'inst_ord' = 3,
  'item_ord' = c(22),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument ==  
                           "Urban Life Stress Scale",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
           "Urban Life Stress Scale",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Urban Life Stress Scale",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                  checking_vars[str_detect(checking_vars, "(^uls)|(^ULS)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Perceived Stress Scale

We found 12 dropped calculated variables that referenced the Perceived Stress Scale measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^PS)|(^ps)")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("ps")))
```

We calculated the score for the item, taking care to reverse scoring for Questions 2 and 3.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(ps_total = (ps_1 + (4 - ps_2) + (4 - ps_3) + ps_4)
         )

attr(qds_all_visits$ps_total, 'label') <- "Percieved Stress Score Total"

```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('ps_total'),
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Perceived Stress Scale',
  'inst_ord' = 5,
  'item_ord' = c(5),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument ==  
                           "Perceived Stress Scale",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
           "Perceived Stress Scale",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Perceived Stress Scale",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^PS)|(^ps)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```


### Distress Tolerance Scale (DTS) 

We found 20 dropped calculated variables that referenced the Distress Tolerance Scale (DTS) measures. We isolated these variables from Visit 2 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^dts)|(^DTS)")]

checking_cols <- v2 %>%
  select(all_of(drop_v2)) %>%
  select(all_of(starts_with("dts")))
```

All QDS variables were written with reverse coding, with the exception of Question 7. We calculated subscales within the instrument. Question 6 is not used in scoring, and was a reversal of Question 8.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(dts_tolerance = ( ((6 - dts_1) + (6 - dts_3) + (6 - dts_5))/3),
         dts_absorption = ( ((6 - dts_2) + (6 - dts_4) + (6 - dts_16))/3),
         dts_appraisal =( (dts_7 + (6 - dts_8) + (6 - dts_10) +(6 - dts_11) + 
                             (6 - dts_12) + (6 - dts_13))/6),
         dts_regulation = ( ((6 - dts_9) + (6 - dts_14) + (6 - dts_15))/3),
         dts_total = ((dts_tolerance + dts_absorption + dts_appraisal + 
                         dts_regulation)/4)
         )

attr(qds_all_visits$dts_tolerance, 'label') <- "DTS Tolerance Subscale Mean"
attr(qds_all_visits$dts_absorption, 'label') <- "DTS Absorption Subscale Mean"
attr(qds_all_visits$dts_appraisal, 'label') <- "DTS Appraisal Subscale Mean"
attr(qds_all_visits$dts_regulation, 'label') <- "DTS Regulation Subscale Mean"
attr(qds_all_visits$dts_total, 'label') <- "DTS Total Mean"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('dts_tolerance', 'dts_absorption', 'dts_appraisal',
                 'dts_regulation', 'dts_total'),
  'section' = 'Stress',
  'sec_ord' = 5,
  'instrument' = 'Distress Tolerance Scale (DTS)',
  'inst_ord' = 6,
  'item_ord' = c(17, 18, 19, 20, 21),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument ==  
                           "Distress Tolerance Scale (DTS)",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
           "Distress Tolerance Scale (DTS)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Distress Tolerance Scale (DTS)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^dts)|(^DTS)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Negative Affect

### Aggression Questionnaire (AQ-12)

We found 20 dropped calculated variables that referenced the Aggression Questionnaire (AQ-12) measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, 
"(^((pa_)|(aq)|(va)|(ha)|(PA_)|(AQ)|(VA)|(HA)|(A_)|(a_)))|(^(a)|(A)$)|(^(pa)$)|(^(PA)$)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(AQ, PA, VA, A, HA)
```

We calculated the total of the items, and categorized the result.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(aq_physical = (aq_1 + aq_2 + aq_3),
         aq_verbal = (aq_4 + aq_5 + aq_6),
         aq_anger = (aq_7 + aq_8 + aq_9),
         aq_hostility = (aq_10 + aq_11 + aq_12),
         aq_total = (aq_physical + aq_verbal + aq_anger + aq_hostility)
         )

attr(qds_all_visits$aq_physical, 
     'label') <- "AQ Physical Aggression subscale"
attr(qds_all_visits$aq_verbal, 
     'label') <- "AQ Verbal Aggression subscale"
attr(qds_all_visits$aq_anger, 
     'label') <- "AQ Anger subscale"
attr(qds_all_visits$aq_hostility, 
     'label') <- "AQ Hostility subscale"
attr(qds_all_visits$aq_total, 
     'label') <- "AQ Total"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('aq_physical', 'aq_verbal', 'aq_anger', 'aq_hostility',
                 'aq_total'),
  'section' = 'Negative Affect',
  'sec_ord' = 6,
  'instrument' = 'Aggression Questionnaire (AQ-12)',
  'inst_ord' = 1,
  'item_ord' = c(13, 14, 15, 16, 17),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Aggression Questionnaire (AQ-12)",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Aggression Questionnaire (AQ-12)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Aggression Questionnaire (AQ-12)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, checking_vars[str_detect(checking_vars, 
"(^((pa_)|(aq)|(va)|(ha)|(PA_)|(AQ)|(VA)|(HA)|(A_)|(a_)))|(^(a)|(A)$)|(^(pa)$)|(^(PA)$)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

### Center for Epidemiological Studies Depression (CES-D)

We found 64 dropped calculated variables that referenced the Center for Epidemiological Studies Depression (CES-D) measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "((ces)|(CES))")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(starts_with("ces"))
```

We calculated the overall total, taking care to ensure reverse scoring of items 5 and 8, and the resulting category based on this score.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(ces_total = (ces_1 + ces_2 + ces_3 + ces_4 + (3-ces_5) + ces_6 +
                         ces_7 + (3-ces_8) + ces_9 + ces_10),
         ces_total_cat = case_when(
           ces_total >= 10 ~ 1,
           ces_total < 10 ~ 0,
           TRUE ~ NA
         ))

attr(qds_all_visits$ces_total, 'label') <- "CESD Total"
attr(qds_all_visits$ces_total_cat, 'label') <- "CESD outcome categorized"
attr(qds_all_visits$ces_total_cat, 'labels') <- c("not depressed" = 0, 
                                                  "depressed" = 1)
```

We also dichotomized all of the variables, taking care to ensure reverse scoring of items 5 and 8.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(
    ces_1_dichot = case_when(
      (ces_1 == 0) | (ces_1 == 1) ~ 0,
      (ces_1 == 2) | (ces_1 == 3) ~ 1,
      TRUE ~ NA
      ),
    ces_2_dichot = case_when(
      (ces_2 == 0) | (ces_2 == 1) ~ 0,
      (ces_2 == 2) | (ces_2 == 3) ~ 1,
      TRUE ~ NA
      ),
    ces_3_dichot = case_when(
      (ces_3 == 0) | (ces_3 == 1) ~ 0,
      (ces_3 == 2) | (ces_3 == 3) ~ 1,
      TRUE ~ NA
      ),         
    ces_4_dichot = case_when(
      (ces_4 == 0) | (ces_4 == 1) ~ 0,
      (ces_4 == 2) | (ces_4 == 3) ~ 1,
      TRUE ~ NA
      ),
    # Reverse score Q5
    ces_5_dichot = case_when(
      (ces_5 == 2) | (ces_5 == 3) ~ 0,
      (ces_5 == 0) | (ces_5 == 1) ~ 1,
      TRUE ~ NA
      ),
    ces_6_dichot = case_when(
      (ces_6 == 0) | (ces_6 == 1) ~ 0,
      (ces_6 == 2) | (ces_6 == 3) ~ 1,
      TRUE ~ NA
      ),
    ces_7_dichot = case_when(
      (ces_7 == 0) | (ces_7 == 1) ~ 0,
      (ces_7 == 2) | (ces_7 == 3) ~ 1,
      TRUE ~ NA
      ),
    # Reverse score Q8
    ces_8_dichot = case_when(
      (ces_8 == 2) | (ces_8 == 3) ~ 0,
      (ces_8 == 0) | (ces_8 == 1) ~ 1,
      TRUE ~ NA
      ),
    ces_9_dichot = case_when(
      (ces_9 == 0) | (ces_9 == 1) ~ 0,
      (ces_9 == 2) | (ces_9 == 3) ~ 1,
      TRUE ~ NA
      ),
    ces_10_dichot = case_when(
      (ces_10 == 0) | (ces_10 == 1) ~ 0,
      (ces_10 == 2) | (ces_10 == 3) ~ 1,
      TRUE ~ NA
      ),
    ces_dichot_total = (ces_1_dichot + ces_2_dichot + ces_3_dichot + 
      ces_4_dichot + ces_5_dichot + ces_6_dichot + ces_7_dichot + ces_8_dichot
      + ces_9_dichot + ces_10_dichot),
    ces_dichot_cat = case_when(
      ces_dichot_total >= 4 ~ 1,
      ces_dichot_total < 4 ~ 0,
      TRUE ~ NA
    )
  )

for (i in c(1:10)){
  attr(qds_all_visits[[paste0('ces_',i,'_dichot')]], 'label') <-
    paste0("CES-",i," dichot")
}

attr(qds_all_visits$ces_dichot_total, 
     'label') <- "Sum of CESD Dichotomized items"

attr(qds_all_visits$ces_dichot_cat, 
     'label') <- "CESD Dichotomized outcome categorized"
attr(qds_all_visits$ces_dichot_cat, 'labels') <- c("not depressed" = 0, 
                                                  "depressed" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
new_vars <- c('ces_total', 'ces_total_cat')

for (i in c(1:10)){
  new_vars <- c(new_vars, paste0("ces_",i,"_dichot"))
}

new_vars <- c(new_vars, 'ces_dichot_total', 'ces_dichot_cat')

map_temp_tibble <- tibble::tibble(
  'variable' = new_vars,
  'section' = 'Negative Affect',
  'sec_ord' = 6,
  'instrument' = 'Center for Epidemiological Studies Depression (CES-D)',
  'inst_ord' = 2,
  'item_ord' = c(21, 22, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 24),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Center for Epidemiological Studies Depression (CES-D)",] %>%
  mutate(item_ord = (item_ord *2) - 1)

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                 "Center for Epidemiological Studies Depression (CES-D)",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == 
               "Center for Epidemiological Studies Depression (CES-D)",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "((ces)|(CES))")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Interpersonal Resources

### Interpersonal Support Evaluation List

We found 36 dropped calculated variables that referenced the Interpersonal Support Evaluation List measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^is)|(^IS)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("is")))
```

We calculated subscales within the instrument, with care taken to reverse score for items 1, 5, 7, 8, 11 and 12.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(is_app = ( (5 - is_2) + is_4 + is_6 + (5 - is_11)),
         is_bel = ( (5 - is_1) + is_5 + (5 - is_7) + is_9),
         is_tan = (is_3 + (5 - is_8) + is_10 + (5 - is_12))
         )

attr(qds_all_visits$is_app, 'label') <- "ISE appraisal"
attr(qds_all_visits$is_bel, 'label') <- "ISE belonging"
attr(qds_all_visits$is_tan, 'label') <- "ISE tangible"
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('is_app', 'is_bel', 'is_tan'),
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Interpersonal Support Evaluation List',
  'inst_ord' = 1,
  'item_ord' = c(13, 14, 15),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Interpersonal Support Evaluation List",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Interpersonal Support Evaluation List",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Interpersonal Support Evaluation List",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^is)|(^IS)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```


### Lubben Social Network Scale 6

We found 12 dropped calculated variables that referenced the Lubben Social Network Scale 6 measures. We isolated these variables from Visit 1 to assess for labels and other attributes.

```{r}
checking_vars[str_detect(checking_vars, "(^lsn)|(^LSN)")]

checking_cols <- v1 %>%
  select(all_of(drop_v1)) %>%
  select(all_of(starts_with("lsn")))
```

We calculated the subscales and categories within the instrument.

```{r}
qds_all_visits <- qds_all_visits %>%
  mutate(lsn_family = (lsn_1 + lsn_2 + lsn_3),
         lsn_family_cat = case_when(
           lsn_family < 6 ~ 0,
           lsn_family >= 6 ~ 1,
           TRUE ~ NA
         ),
         lsn_friends = (lsn_4 + lsn_5 + lsn_6),
         lsn_friends_cat = case_when(
           lsn_friends < 6 ~ 0,
           lsn_family >= 6 ~ 1,
           TRUE ~ NA
         ),
         lsn_total = lsn_family + lsn_friends,
         lsn_total_cat = case_when(
           lsn_total <= 12 ~ 0,
           lsn_total > 12 ~ 1
         )
         )

attr(qds_all_visits$lsn_family, 'label') <- "LSN Family subscale"
attr(qds_all_visits$lsn_family_cat, 'label') <- "LSN Family category"
attr(qds_all_visits$lsn_friends, 'label') <- "LSN Friends subscale"
attr(qds_all_visits$lsn_friends_cat, 'label') <- "LSN Friends category"
attr(qds_all_visits$lsn_total, 'label') <- "LSN Total"
attr(qds_all_visits$lsn_total_cat, 'label') <- "LSN Total category"

attr(qds_all_visits$lsn_family_cat, 'labels') <- c("marginal support" = 0, 
                                                  "social engagement" = 1)
attr(qds_all_visits$lsn_friends_cat, 'labels') <- c("marginal support" = 0, 
                                                  "social engagement" = 1)
attr(qds_all_visits$lsn_total_cat, 'labels') <- c("marginal support" = 0, 
                                                  "social engagement" = 1)
```

We recalculated the variable map for this instrument, and updated our variable map with the desired order.

```{r}
map_temp_tibble <- tibble::tibble(
  'variable' = c('lsn_family', 'lsn_family_cat', 'lsn_friends', 
                 'lsn_friends_cat', 'lsn_total', 'lsn_total_cat'),
  'section' = 'Interpersonal/Intrapersonal Resources',
  'sec_ord' = 7,
  'instrument' = 'Lubben Social Network Scale 6',
  'inst_ord' = 3,
  'item_ord' = c(7, 8, 9, 10, 11, 12),
  'v1' = NA, 'v2' = NA, 'v3' = NA, 'v4' = NA, 'v5' = NA,
  drop_consolidated = NA,
  calculated = TRUE
)

inst_map <- variable_map[variable_map$instrument == 
               "Lubben Social Network Scale 6",]

inst_map <- rbind(inst_map, map_temp_tibble)

variable_map <- variable_map[variable_map$instrument != 
                               "Lubben Social Network Scale 6",] %>%
  rbind(inst_map) %>%
  arrange(sec_ord, inst_ord, item_ord)

variable_map[variable_map$instrument == "Lubben Social Network Scale 6",]
```

We added these resolved variables to our resolved list.

```{r}
resolved_vars <- c(resolved_vars, 
                   checking_vars[str_detect(checking_vars, "(^lsn)|(^LSN)")])

checking_vars <- setdiff(drop_vars, resolved_vars)
```

## Data Check

We ensured that `drop_consolidated` was FALSE for any variable in the variable map that was missing a value for this variable.

```{r}
variable_map <- variable_map %>%
  mutate(drop_consolidated  = ifelse(is.na(drop_consolidated), 
                                     FALSE, 
                                     drop_consolidated))
```

We checked to see if there were any remaining variables that had not been resolved.

```{r}
length(setdiff(drop_vars, resolved_vars)) == 0
# TRUE
```

We checked the final dimensions of our data frames.

```{r}
dim(qds_all_visits)
# 1506 1000
dim(variable_map)
# 1013 13
```

We verified that there were no duplicated variables in our variable map.

```{r}
length(unique(variable_map$variable)) == nrow(variable_map)
# TRUE
```

We verified that there were no variables present in our combined QDS data set that were missing from our variable map.

```{r}
length(setdiff(colnames(qds_all_visits), variable_map$variable)) == 0

# TRUE
```

We verified that the only variables present in the variable map, which were not also present in the combined data set, were variables that had been intentionally dropped.

```{r}
length(setdiff(variable_map$variable, colnames(qds_all_visits)))

# 13

unique(variable_map[variable_map$variable %in% 
                      setdiff(variable_map$variable, colnames(qds_all_visits)),
                    ]$drop_consolidated)

# TRUE
```

We reordered our combined data set based on our variable map.

```{r}
var_order <- pull(variable_map %>%
  filter(!drop_consolidated) %>%
  select(variable))

length(var_order) == length(unique(var_order)) 
# TRUE
length(var_order) == length(colnames(qds_all_visits))
# TRUE
length(setdiff(var_order, colnames(qds_all_visits)))
# 0
length(setdiff(colnames(qds_all_visits), var_order))
# 0

qds_all_visits <- qds_all_visits[,var_order]
```

We purged items that were no longer needed.

```{r}
rm(v1)
rm(v2)
rm(v3)
rm(v4)
rm(v5)
rm(drop_v1)
rm(drop_v2)
rm(drop_v3)
rm(drop_v4)
rm(drop_v5)
rm(drop_vars)
rm(i)
rm(resolved_vars)
rm(checking_vars)
rm(checking_cols)
rm(map_temp_tibble)
rm(inst_map)
rm(new_vars)
rm(var_order)
```

# üíæ Save the data frame

```{r}
rds_path <- "data/qds/qds_all_visits_import.rds"
write_rds(qds_all_visits, rds_path)
write_rds(variable_map, here("data","variable_map.rds"))

# Michael also wants an SPSS version
spss_path <- "data/qds/qds_all_visits_import.SAV"
write_sav(qds_all_visits, spss_path)
```
 
 
# Print a message for when this file is being sourced
 
```{r}
cat(
  paste0(Sys.Date(), ":"),
  "QDS data saved to", rds_path, " and ", spss_path
)
```


 